{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/auth/help/help.component.html","./src/app/auth/login/login.component.html","./src/app/auth/reset/reset.component.html","./src/app/auth/signup/signup.component.html","./src/app/body/body.component.html","./src/app/body/catergory/catergory.component.html","./src/app/body/catergory/new-post/catergory-newly.component.html","./src/app/body/catergory/popular-post/catergory-popular.component.html","./src/app/body/home/home.component.html","./src/app/body/home/new-post/new-post.component.html","./src/app/body/home/popular-post/popular-post.component.html","./src/app/body/nav/nav.component.html","./src/app/body/search/search.component.html","./src/app/body/user/post/user-post.component.html","./src/app/body/user/setting/user-setting.component.html","./src/app/body/user/user.component.html","./src/app/error/error.component.html","./src/app/header/header.component.html","./src/app/post/post-create/post-create.component.html","./src/app/post/post-list/post-list.component.html","./src/app/angular-material.module.ts","./src/app/app-rounting.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth-intercepter.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/help/help.component.css","./src/app/auth/help/help.component.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/reset/reset.component.css","./src/app/auth/reset/reset.component.ts","./src/app/auth/signup/password-validator.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts","./src/app/body/body-routing.module.ts","./src/app/body/body.component.css","./src/app/body/body.component.ts","./src/app/body/body.module.ts","./src/app/body/catergory/catergory.component.css","./src/app/body/catergory/catergory.component.ts","./src/app/body/catergory/catergory.module.ts","./src/app/body/catergory/catergory.service.ts","./src/app/body/catergory/new-post/catergory-newly.component.css","./src/app/body/catergory/new-post/catergory-newly.component.ts","./src/app/body/catergory/popular-post/catergory-popular.component.css","./src/app/body/catergory/popular-post/catergory-popular.component.ts","./src/app/body/home/home.component.css","./src/app/body/home/home.component.ts","./src/app/body/home/home.module.ts","./src/app/body/home/main-post.service.ts","./src/app/body/home/new-post/new-post.component.css","./src/app/body/home/new-post/new-post.component.ts","./src/app/body/home/popular-post/popular-post.component.css","./src/app/body/home/popular-post/popular-post.component.ts","./src/app/body/nav/nav.component.css","./src/app/body/nav/nav.component.ts","./src/app/body/nav/nav.model.ts","./src/app/body/search/search.component.css","./src/app/body/search/search.component.ts","./src/app/body/user/post/user-post.component.css","./src/app/body/user/post/user-post.component.ts","./src/app/body/user/setting/mime-type.validator.ts","./src/app/body/user/setting/user-setting.component.css","./src/app/body/user/setting/user-setting.component.ts","./src/app/body/user/user.component.css","./src/app/body/user/user.component.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/google-analytics-events-service.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/post/ngx-summernote.directive.ts","./src/app/post/post-create/post-create.component.css","./src/app/post/post-create/post-create.component.ts","./src/app/post/post-list/post-list.component.css","./src/app/post/post-list/post-list.component.ts","./src/app/sanitize-html-pipe.ts","./src/app/shared/like-hate.service.ts","./src/app/shared/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--공통 해더...-->\\n<app-header></app-header>\\n<!-- <app-ifix-document></app-ifix-document> -->\\n\\n<!--태블릿, 데스크탑 용 바디-->\\n<router-outlet *ngIf=\\\"mobileQuery.matches\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\"></router-outlet>\\n<!-- \\n<data-table></data-table> -->\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" style=\\\"justify-content: center\\\">\\n    <div class=\\\"col-lg-5 col-md-8 col-10 mt-5\\\">\\n      <h1>Forgot Password</h1>\\n      <form\\n        class=\\\"form-signin\\\"\\n        #emailForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"onNgSubmit(emailForm)\\\"\\n        novalidate\\n        *ngIf=\\\"!sumitBool\\\"\\n      >\\n        <h6 class=\\\"mt-4\\\">Your email address</h6>\\n        <input\\n          type=\\\"email\\\"\\n          id=\\\"email\\\"\\n          name=\\\"email\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"name@email.com\\\"\\n          required\\n          ngModel\\n          #email=\\\"ngModel\\\"\\n        />\\n        <mat-error *ngIf=\\\"email.invalid && email.touched\\\"\\n          >Please enter a valid email.</mat-error\\n        >\\n        <button\\n          class=\\\"btn btn-primary mt-5\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"emailForm.invalid\\\"\\n          [class.disabled]=\\\"emailForm.invalid\\\"\\n        >\\n          Send instruction\\n        </button>\\n      </form>\\n      <br />\\n      <small *ngIf=\\\"sumitBool\\\"\\n        >You should receive an email shortly. <br />\\n        If you still need assistance, contact <span>dtk@u-medi.com</span></small\\n      >\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoding\\\"></mat-spinner>\\n<div class=\\\"text-center mt-5\\\">\\n  <h1>로그인</h1>\\n  <form\\n    class=\\\"form-signin\\\"\\n    #loginForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"onNgSubmit(loginForm)\\\"\\n    novalidate\\n  >\\n    <label for=\\\"email\\\" class=\\\"sr-only\\\">email</label>\\n    <input\\n      type=\\\"email\\\"\\n      id=\\\"email\\\"\\n      name=\\\"email\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"email\\\"\\n      required\\n      email\\n      ngModel\\n      #email=\\\"ngModel\\\"\\n    />\\n    <mat-error *ngIf=\\\"email.invalid && email.touched\\\"\\n      >Please enter a valid email.</mat-error\\n    >\\n\\n    <label for=\\\"password\\\" class=\\\"sr-only\\\">password</label>\\n    <input\\n      type=\\\"password\\\"\\n      id=\\\"password\\\"\\n      name=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"password\\\"\\n      pattern=\\\"(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}\\\"\\n      required\\n      ngModel\\n      #password=\\\"ngModel\\\"\\n    />\\n    <mat-error *ngIf=\\\"password.invalid && password.touched\\\"\\n      >Please enter a valid password.</mat-error\\n    >\\n\\n    <button\\n      class=\\\"btn btn-lg btn-block mt-5\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"loginForm.invalid\\\"\\n      [class.disabled]=\\\"loginForm.invalid\\\"\\n    >\\n      Sign in\\n    </button>\\n  </form>\\n  <a routerLink=\\\"/help\\\"><small style=\\\"color: gray\\\">Forgot Password</small></a>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" style=\\\"justify-content: center\\\">\\n    <div class=\\\"col-lg-5 col-md-8 col-10 mt-5\\\">\\n      <h1>Reset Password</h1>\\n      <form\\n        class=\\\"form-signin\\\"\\n        [formGroup]=\\\"resetFormGroup\\\"\\n        (ngSubmit)=\\\"onSubmit()\\\"\\n        novalidate\\n      >\\n        <small>Enter your new password for your account</small>\\n\\n        <div formGroupName=\\\"passwordGroup\\\">\\n          <h6 class=\\\"mt-4\\\">New Password</h6>\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"password\\\"\\n          />\\n          <mat-error\\n            *ngIf=\\\"\\n              resetFormGroup.get('passwordGroup').get('password').invalid &&\\n              resetFormGroup.get('passwordGroup').get('password').touched\\n            \\\"\\n            >Please enter a valid password.</mat-error\\n          >\\n\\n          <h6 class=\\\"mt-4\\\">Confirm Password</h6>\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"confirmPassword\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"confirmPassword\\\"\\n          />\\n          <mat-error\\n            *ngIf=\\\"\\n              resetFormGroup.get('passwordGroup').invalid &&\\n              resetFormGroup.get('passwordGroup').touched\\n            \\\"\\n            >It doesn't match.</mat-error\\n          >\\n        </div>\\n        <button\\n          class=\\\"btn btn-primary mt-5\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"resetFormGroup.invalid\\\"\\n          [class.disabled]=\\\"resetFormGroup.invalid\\\"\\n        >\\n          Rest Password\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"text-center mt-5 container\\\">\\n  <form\\n    class=\\\"form-signin\\\"\\n    [formGroup]=\\\"signupForm\\\"\\n    (ngSubmit)=\\\"onSubmit()\\\"\\n    novalidate\\n  >\\n    <div class=\\\"text-field\\\">\\n      <h3 class=\\\"field-group-name\\\">개인정보</h3>\\n      <hr />\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">성</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"lastName\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"lastName\\\"\\n        />\\n        <mat-error\\n          *ngIf=\\\"\\n            signupForm.get('lastName').invalid &&\\n            signupForm.get('lastName').touched\\n          \\\"\\n          >Please enter a valid last name.</mat-error\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">이름</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"firstName\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"firstName\\\"\\n        />\\n        <mat-error\\n          *ngIf=\\\"\\n            signupForm.get('firstName').invalid &&\\n            signupForm.get('firstName').touched\\n          \\\"\\n          >Please enter a valid first name.</mat-error\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"avatar\\\" class=\\\"mr-2\\\">성별 : </label>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input\\n            class=\\\"form-check-input\\\"\\n            type=\\\"radio\\\"\\n            name=\\\"gender\\\"\\n            value=\\\"male\\\"\\n            formControlName=\\\"gender\\\"\\n            id=\\\"male\\\"\\n            checked\\n          />\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\" for=\\\"male\\\"\\n            >남자</label\\n          >\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input\\n            class=\\\"form-check-input\\\"\\n            type=\\\"radio\\\"\\n            name=\\\"gender\\\"\\n            value=\\\"female\\\"\\n            formControlName=\\\"gender\\\"\\n            id=\\\"female\\\"\\n          />\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\" for=\\\"female\\\"\\n            >여자</label\\n          >\\n        </div>\\n      </div>\\n      <h3 class=\\\"field-group-name\\\">계정</h3>\\n      <hr />\\n      <div class=\\\"form-group\\\" style=\\\"text-align: left\\\">\\n        <label for=\\\"email\\\">이메일*</label>\\n        <input\\n          type=\\\"email\\\"\\n          id=\\\"email\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"email\\\"\\n        />\\n        <mat-error\\n          *ngIf=\\\"\\n            signupForm.get('email').invalid && signupForm.get('email').touched\\n          \\\"\\n          >Please enter a valid email.</mat-error\\n        >\\n      </div>\\n      <div formGroupName=\\\"passwordGroup\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\" class=\\\"m-0\\\">비밀번호*</label><br />\\n          <small\\n            >비밀번호는 최소 6글자 특수문자, 대소문자 알파벳 형태여야\\n            합니다.</small\\n          >\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"password\\\"\\n          />\\n          <mat-error\\n            *ngIf=\\\"\\n              signupForm.get('passwordGroup').get('password').invalid &&\\n              signupForm.get('passwordGroup').get('password').touched\\n            \\\"\\n            >Please enter a valid password.</mat-error\\n          >\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"confirmPassword\\\">비밀번호 확인*</label>\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"confirmPassword\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"confirmPassword\\\"\\n          />\\n          <mat-error\\n            *ngIf=\\\"\\n              signupForm.get('passwordGroup').invalid &&\\n              signupForm.get('passwordGroup').touched\\n            \\\"\\n            >It doesn't match.</mat-error\\n          >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"nickname\\\">닉네임*</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"nickname\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"nickName\\\"\\n        />\\n        <mat-error\\n          *ngIf=\\\"\\n            signupForm.get('nickName').invalid &&\\n            signupForm.get('nickName').touched\\n          \\\"\\n          >Please enter a valid nick name(at least 3 characters).</mat-error\\n        >\\n      </div>\\n      <button\\n        class=\\\"btn btn-lg btn-block mt-5\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"signupForm.invalid\\\"\\n      >\\n        Sign in\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"<!--본문...-->\\n<div class=\\\"container\\\" style=\\\"height: 100%\\\">\\n  <div class=\\\"row container-row\\\" style=\\\"height: 100%\\\">\\n    <!--이 nav는 태블릿 이상일때만 보임...스마트폰에서는 이게 app-haader에 들어감. 로그인,회원가입창일시에는 안보임-->\\n    <nav class=\\\"col-md-3 col-lg-2 bg-light d-none d-sm-block\\\">\\n      <app-nav></app-nav>\\n    </nav>\\n    <div class=\\\"col-md-9 col-lg-9 container-main\\\">\\n      <hr />\\n      <!--헤더에 있는 검색창이 메인화면으로 이동-->\\n      <div class=\\\"mobile-search d-sm-block d-md-none mt-1\\\">\\n        <form\\n          class=\\\"form-inline\\\"\\n          #searchForm=\\\"ngForm\\\"\\n          (ngSubmit)=\\\"onNgSubmit(searchForm)\\\"\\n          navalidate\\n        >\\n          <input\\n            class=\\\"form-control search col-9\\\"\\n            type=\\\"search\\\"\\n            placeholder=\\\"Search\\\"\\n            aria-label=\\\"Search\\\"\\n            name=\\\"searchInput\\\"\\n            ngModel\\n            #searchInput\\n            required\\n          />\\n          <button class=\\\"btn btn-outline-success sbtn col-3\\\" type=\\\"submit\\\">\\n            Search\\n          </button>\\n        </form>\\n      </div>\\n      <main #contentArea>\\n        <router-outlet></router-outlet>\\n      </main>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<!--[infiniteScrollDistance]=\\\"2\\\"라는 뜻은 80%(100% - 20%)가 스크롤되었을 때 이벤트가 트리거됨-->\\n<!-- infiniteScrollThrottle: 이 이벤트는 사용자가 스크롤을 중지한 후 이 몇 밀리초 후에 트리거된다 -->\\n<div\\n    infiniteScroll\\n    [infiniteScrollDistance]=\\\"2\\\"\\n    (scrolled)=\\\"onScrollDown()\\\"\\n    style=\\\"width:100%;\\\"\\n    class=\\\"newly-post-parent\\\"\\n  >\\n  <app-catergory-popular></app-catergory-popular>\\n  <div>\\n    <img src=\\\"../../assets/images/banner2.jpg\\\" class=\\\"d-lg-none banner\\\" [routerLink]=\\\"['/catergory', 'Camp Humphreys', '799']\\\">\\n  </div>\\n  <app-catergory-newly></app-catergory-newly>\\n</div>\\n\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row newly-post\\\">\\n    <div class=\\\"col-12 newly-post-title\\\">\\n      <h4>{{ catergory[0].name }} 새 게시글</h4>\\n    </div>\\n    <div class=\\\"col-11 newly-post-content\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"post-cotent\\\">\\n        <!--왼쪽(좋아요)-->\\n        <div class=\\\"post-left\\\">\\n          <button (click)=\\\"increase(post?.post_no)\\\">\\n            <svg\\n              aria-hidden=\\\"true\\\"\\n              class=\\\"svg-icon m0 iconArrowUpLg\\\"\\n              width=\\\"36\\\"\\n              height=\\\"36\\\"\\n              viewBox=\\\"0 0 36 36\\\"\\n            >\\n              <path d=\\\"M2 26h32L18 10 2 26z\\\" [attr.fill]=\\\"voteUpColor\\\"></path>\\n            </svg>\\n          </button>\\n          <div class=\\\"votes\\\">{{ post?.likes }}</div>\\n          <button (click)=\\\"decrease(post?.post_no)\\\">\\n            <svg\\n              aria-hidden=\\\"true\\\"\\n              class=\\\"svg-icon m0 iconArrowDownLg\\\"\\n              width=\\\"36\\\"\\n              height=\\\"36\\\"\\n              viewBox=\\\"0 0 36 36\\\"\\n            >\\n              <path d=\\\"M2 10h32L18 26 2 10z\\\" [attr.fill]=\\\"voteDownColor\\\"></path>\\n            </svg>\\n          </button>\\n        </div>\\n\\n        <!--중앙( 제목 / 내용/ 작성자 )-->\\n        <div class=\\\"post-center\\\">\\n          <div class=\\\"title\\\">\\n            <a\\n              [routerLink]=\\\"['/catergory', catergory[0].fileNav, post?.post_no]\\\"\\n              >{{ post.title }}</a\\n            >\\n          </div>\\n          <div class=\\\"content\\\" [innerHTML]=\\\"post?.curtContent\\\"></div>\\n          <div class=\\\"writer\\\">\\n            <img [src]=\\\"post?.avatar\\\" class=\\\"avatar\\\" />\\n            {{ post?.writer }}\\n            <small class=\\\"text-muted\\\">{{\\n              post?.post_date | date: \\\"yyyy-MM-dd hh:mm a\\\":\\\"UTC\\\"\\n            }}</small>\\n          </div>\\n        </div>\\n\\n        <!--오른쪽(대표이미지)-->\\n        <div class=\\\"post-right\\\">\\n          <img [src]=\\\"post?.img_path\\\" *ngIf=\\\"post?.img_path ? true : false\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-11 newly-post-content finish\\\" *ngIf=\\\"isFinish\\\">Finish</div>\\n    <mat-spinner *ngIf=\\\"isLoding\\\"></mat-spinner>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"description clearfix\\\">\\n    <div class=\\\"post-hash\\\">\\n      <mat-chip-list>\\n        <mat-chip *ngFor=\\\"let hashTag of catergory[0].hashTag\\\"\\n          >#{{ hashTag }}</mat-chip\\n        >\\n      </mat-chip-list>\\n    </div>\\n    <div class=\\\"space\\\"></div>\\n    <button\\n      class=\\\"btn btn-info post-button\\\"\\n      routerLink=\\\"/post\\\"\\n      [queryParams]=\\\"{ catergory: catergory[0].name }\\\"\\n      *ngIf=\\\"isAuth\\\"\\n    >\\n      <span style=\\\"position: relative; top: -2px\\\">\\n        <mat-icon style=\\\"position: relative; top: 5px\\\">post_add</mat-icon>\\n        <span>New Post</span>\\n      </span>\\n    </button>\\n  </div>\\n  <div class=\\\"row hot-post\\\">\\n    <div class=\\\"col-12 hot-post-title\\\">\\n      <h4>{{ catergory[0].name }} 인기 게시글</h4>\\n    </div>\\n    <div class=\\\"col-12 hot-post-content\\\">\\n      <div class=\\\"row\\\">\\n        <div\\n          class=\\\"col-lg-4 col-sm-6 pt-3 pb-3\\\"\\n          *ngFor=\\\"let post of popularPost\\\"\\n        >\\n          <mat-card>\\n            <mat-card-header>\\n              <div class=\\\"mat-card-avatar\\\">\\n                <!-- <img [src]=\\\"post.avatar\\\" /> -->\\n              </div>\\n              <div class=\\\"mat-card-header-text\\\">\\n                <mat-card-title\\n                  ><a\\n                    [routerLink]=\\\"[\\n                      '/catergory',\\n                      catergory[0].fileNav,\\n                      post.post_no\\n                    ]\\\"\\n                    >{{ post.title }}</a\\n                  ></mat-card-title\\n                >\\n                <mat-card-subtitle>{{ post.writer }}</mat-card-subtitle>\\n              </div>\\n            </mat-card-header>\\n            <div class=\\\"mat-card-body\\\" style=\\\"line-height: 200px\\\">\\n              <img\\n                class=\\\"mat-card-image\\\"\\n                mat-card-image\\n                [src]=\\\"post.img_path\\\"\\n                *ngIf=\\\"post.img_path; else elseBlock\\\"\\n              />\\n              <ng-template #elseBlock\\n                ><img\\n                  class=\\\"mat-card-image\\\"\\n                  mat-card-image\\n                  src=\\\"../../../assets/images/logo3.jpg\\\"\\n              /></ng-template>\\n            </div>\\n            <mat-card-content>\\n              <p _ngcontent-tkn-c193=\\\"\\\">{{ post.content }}</p>\\n            </mat-card-content>\\n            <!--\\n              <mat-card-actions>\\n                <button class=\\\"btn btn-primary\\\">Like</button>\\n              </mat-card-actions>\\n              -->\\n          </mat-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div></div>\\n\"","module.exports = \"<app-popular-post></app-popular-post>\\n\\n<app-new-post></app-new-post>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <h3 class=\\\"mat-headline\\\">새 게시글</h3>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div\\n      class=\\\"col-lg-4 col-md-6 col-sm-12 m-0 post\\\"\\n      *ngFor=\\\"let post of newlyPost\\\"\\n    >\\n      <h5 class=\\\"catergory\\\">{{ post.catergory }}</h5>\\n      <div\\n        class=\\\"newly-post-content\\\"\\n        [routerLink]=\\\"['/catergory', post.catergory, post.post_no]\\\"\\n      >\\n        <h4 class=\\\"post-title\\\">{{ post.title }}</h4>\\n        <p class=\\\"post-content\\\">{{ post.curtContent }}</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"mb-3 mat-headline\\\">\\n    <h3 style=\\\"font-size: 1.5rem !important\\\" class=\\\"pt-2\\\">인기 게시글</h3>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 popular-post\\\" *ngFor=\\\"let post of popularPost\\\">\\n      <div class=\\\"col-12 post-catergory\\\">\\n        <h5 class=\\\"catergory\\\">{{ post.catergory }}</h5>\\n      </div>\\n      <div\\n        class=\\\"row no-gutters hot-post-content\\\"\\n        [routerLink]=\\\"['/catergory', post.catergory, post.post_no]\\\"\\n      >\\n        <div class=\\\"col-4 hot-post-image\\\">\\n          <img\\n            [src]=\\\"post.img_path\\\"\\n            class=\\\"img-fluid\\\"\\n            *ngIf=\\\"post.img_path; else elseBlock\\\"\\n          />\\n          <ng-template #elseBlock\\n            ><img class=\\\"img-fluid\\\" src=\\\"../../../assets/images/logo3.jpg\\\"\\n          /></ng-template>\\n        </div>\\n        <div class=\\\"col-8\\\">\\n          <div class=\\\"card-body\\\">\\n            <h6 class=\\\"card-title\\\">{{ post.title }}</h6>\\n            <p class=\\\"card-text\\\">{{ post.curtContent }}</p>\\n            <p class=\\\"card-text\\\">\\n              <small class=\\\"text-muted\\\">{{\\n                post.post_date | date: \\\"yyyy-MM-dd hh:mm a\\\":\\\"UTC\\\"\\n              }}</small>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"sidebar-sticky d-none d-sm-block\\\">\\n  <ul class=\\\"nav flex-column\\\">\\n    <li *ngFor=\\\"let cg of catergory; let i = index\\\" class=\\\"nav-item\\\">\\n      <a\\n        class=\\\"nav-link\\\"\\n        [routerLink]=\\\"['/catergory', cg.fileNav]\\\"\\n        routerLinkActive=\\\"active\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n        >{{ cg.name }}</a\\n      >\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"search\\\">\\n    <h4>{{searchInput}}</h4>\\n    <small>Search results</small>\\n  </div>\\n  <div\\n        infiniteScroll\\n        [infiniteScrollDistance]=\\\"2\\\"\\n        [scrollWindow]=\\\"true\\\"\\n        (scrolled)=\\\"onScrollDown()\\\"\\n        style=\\\"width:100%;\\\"\\n        class=\\\"newly-post-parent\\\"\\n      >\\n    <div class=\\\"col-11 newly-post-content\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"post-cotent\\\">\\n          <!--(좋아요)-->\\n        <div class=\\\"post-left\\\">\\n          <button>\\n            <svg aria-hidden=\\\"true\\\" class=\\\"svg-icon m0 iconArrowUpLg\\\" width=\\\"36\\\" height=\\\"36\\\" viewBox=\\\"0 0 36 36\\\">\\n              <path d=\\\"M2 26h32L18 10 2 26z\\\"></path>\\n            </svg>\\n          </button>\\n          <div class=\\\"votes\\\">{{post.likes}}</div>\\n          <button>\\n            <svg aria-hidden=\\\"true\\\" class=\\\"svg-icon m0 iconArrowDownLg\\\" width=\\\"36\\\" height=\\\"36\\\" viewBox=\\\"0 0 36 36\\\">\\n              <path d=\\\"M2 10h32L18 26 2 10z\\\"></path>\\n            </svg>\\n          </button>\\n        </div>\\n        <!--(대표이미지)-->\\n        <div class=\\\"post-center\\\">\\n          <img [src]=post.img_path *ngIf=\\\"post.img_path?true:false\\\">\\n        </div>\\n        <!--( 제목 / 내용/ 작성자 )-->\\n        <div class=\\\"post-right\\\">\\n          <div class=\\\"title\\\">\\n            <a [routerLink]=\\\"['/catergory', post.catergory, post.post_no]\\\"><div [innerHTML]=\\\"post.title\\\"></div></a>\\n          </div>\\n          <div class=\\\"content\\\" [innerHTML]=post.curtContent></div>\\n          <div class=\\\"writer\\\">\\n            <small class=\\\"text-muted\\\">{{post.post_date | date: \\\"yyyy-MM-dd hh:mm a\\\"}}</small>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"user-post\\\">\\n  <h4 class=\\\"mt-5\\\">Post</h4>\\n  <div\\n        infiniteScroll\\n        [infiniteScrollDistance]=\\\"2\\\"\\n        [scrollWindow]=\\\"true\\\"\\n        (scrolled)=\\\"onScrollDown()\\\"\\n        style=\\\"width:100%;\\\"\\n        class=\\\"newly-post-parent\\\"\\n      >\\n    <div class=\\\"col-12 newly-post-content\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"post-cotent\\\">\\n          <!--(좋아요)-->\\n        <div class=\\\"post-left\\\">\\n          <button>\\n            <svg aria-hidden=\\\"true\\\" class=\\\"svg-icon m0 iconArrowUpLg\\\" width=\\\"36\\\" height=\\\"36\\\" viewBox=\\\"0 0 36 36\\\">\\n              <path d=\\\"M2 26h32L18 10 2 26z\\\"></path>\\n            </svg>\\n          </button>\\n          <div class=\\\"votes\\\">{{post.likes}}</div>\\n          <button>\\n            <svg aria-hidden=\\\"true\\\" class=\\\"svg-icon m0 iconArrowDownLg\\\" width=\\\"36\\\" height=\\\"36\\\" viewBox=\\\"0 0 36 36\\\">\\n              <path d=\\\"M2 10h32L18 26 2 10z\\\"></path>\\n            </svg>\\n          </button>\\n        </div>\\n        <!--(대표이미지)-->\\n        <div class=\\\"post-center\\\">\\n          <img [src]=post.img_path *ngIf=\\\"post.img_path?true:false\\\">\\n        </div>\\n        <!--( 제목 / 내용/ 작성자 )-->\\n        <div class=\\\"post-right\\\">\\n          <div class=\\\"title\\\">\\n            <a [routerLink]=\\\"['/catergory', post.catergory, post.post_no]\\\"><div [innerHTML]=\\\"post.title\\\"></div></a>\\n          </div>\\n          <div class=\\\"content\\\" [innerHTML]=post.curtContent></div>\\n          <div class=\\\"writer\\\">\\n            <small class=\\\"text-muted\\\">{{post.post_date | date: \\\"yyyy-MM-dd hh:mm a\\\"}}</small>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","module.exports = \"<div class=\\\"user-setting\\\">\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n  <div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <div class=\\\"user-image\\\">\\n        <h4 class=\\\"m-0 user-image-h4\\\">Image</h4>\\n        <div class=\\\"user-image-content\\\">\\n          <img [src]=\\\"userData.avatar\\\" class=\\\"avatar\\\" *ngIf=\\\"!imageNew\\\">\\n          <div *ngIf=\\\"mode==='update'\\\">\\n            <img [src]=\\\"imagePreview\\\" class=\\\"avatar\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"filePicker.click()\\\">\\n              <i class=\\\"fas fa-plus\\\"></i> Add Profile Picture\\n            </button>\\n            <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\">default picture</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n      <div>\\n        <h4>Account</h4>\\n        <table class=\\\"table table-bordered\\\" *ngIf=\\\"mode==='select'\\\">\\n          <tbody>\\n            <tr>\\n              <th scope=\\\"row\\\">Email address</th>\\n              <td>{{userData.email}}</td>\\n            </tr>\\n            <tr>\\n              <th scope=\\\"row\\\" rowspan=\\\"2\\\">Change password</th>\\n              <td>New password</td>\\n            </tr>\\n            <tr>\\n              <td>Confirm new password</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <div formGroupName=\\\"passwordGroup\\\" *ngIf=\\\"mode==='update'\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <tbody>\\n            <tr>\\n              <th scope=\\\"row\\\">Email address</th>\\n              <td>{{userData.email}}</td>\\n            </tr>\\n            <tr>\\n              <th scope=\\\"row\\\" rowspan=\\\"2\\\">Change password</th>\\n              <td><input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"New password\\\"></td>\\n            </tr>\\n            <tr>\\n              <td><input type=\\\"password\\\" id=\\\"confirmPassword\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm new password\\\"></td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <small style=\\\"color:red;\\\">Please enter at least 6 characters including case and special characters.</small>\\n        </div>\\n      </div>\\n      <div class=\\\"mt-5\\\">\\n        <h4>Profile</h4>\\n        <table class=\\\"table table-bordered\\\">\\n          <tbody>\\n            <tr>\\n              <th scope=\\\"row\\\">Nickname</th>\\n              <td *ngIf=\\\"mode==='select'\\\">{{userData.nickname}}</td>\\n              <td *ngIf=\\\"mode==='update'\\\"><input type=\\\"text\\\" id=\\\"nickname\\\" class=\\\"form-control\\\" formControlName=\\\"nickName\\\" [value]=\\\"userData.nickname\\\"></td>\\n            </tr>\\n            <tr>\\n              <th scope=\\\"row\\\">First name</th>\\n              <td>{{userData.firstname}}</td>\\n            </tr>\\n            <tr>\\n              <th scope=\\\"row\\\">Last name</th>\\n              <td>{{userData.lastname}}</td>\\n            </tr>\\n            <tr>\\n              <th scope=\\\"row\\\">Gender</th>\\n              <td>{{userData.gender}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"button-div\\\">\\n    <button type=\\\"button\\\" class=\\\"btn update\\\" *ngIf=\\\"mode==='select'\\\"(click)=\\\"onUpdate()\\\">Update</button>\\n    <button class=\\\"btn update\\\" *ngIf=\\\"mode==='update'\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\n  </div>\\n  </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"tab\\\">\\n    <a routerLink=\\\"/user/setting\\\" [class.active]=\\\"kind==='setting'\\\">User Settings</a>\\n    <a routerLink=\\\"/user/post\\\" [class.active]=\\\"kind==='post'\\\">Your Post</a>\\n  </div>\\n  <app-user-setting *ngIf=\\\"kind==='setting'\\\"></app-user-setting>\\n  <app-user-post *ngIf=\\\"kind==='post'\\\"></app-user-post>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>An Error Occurred!</h1>\\n<div mat-dialog-content>\\n  <p class=\\\"mat-body-1\\\">{{data.message}}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Okay</button>\\n</div>\\n\"","module.exports = \"<!--태블릿용, 데스크탑용 헤더-->\\n<mat-toolbar class=\\\"d-none d-sm-block\\\">\\n  <mat-toolbar-row>\\n    <div\\n      class=\\\"col-2 header-left\\\"\\n      style=\\\"font-weight: 700; cursor: pointer\\\"\\n      routerLink=\\\"/\\\"\\n    >\\n      개발자's Community\\n    </div>\\n    <div class=\\\"col-6 header-center\\\">\\n      <form\\n        class=\\\"form-inline\\\"\\n        #searchForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"onNgSubmit(searchForm)\\\"\\n        navalidate\\n      >\\n        <input\\n          class=\\\"form-control search\\\"\\n          type=\\\"search\\\"\\n          placeholder=\\\"Search\\\"\\n          aria-label=\\\"Search\\\"\\n          name=\\\"searchInput\\\"\\n          ngModel\\n          #searchInput\\n          required\\n        />\\n        <button mat-stroked-button class=\\\"signup\\\" type=\\\"submit\\\">검색</button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-4 header-right\\\">\\n      <button\\n        mat-stroked-button\\n        class=\\\"login\\\"\\n        routerLink=\\\"/login\\\"\\n        *ngIf=\\\"!userIsAuthenticated\\\"\\n      >\\n        로그인\\n      </button>\\n      <button\\n        mat-flat-button\\n        class=\\\"signup\\\"\\n        routerLink=\\\"/signup\\\"\\n        *ngIf=\\\"!userIsAuthenticated\\\"\\n      >\\n        회원가입\\n      </button>\\n\\n      <button\\n        mat-button\\n        [matMenuTriggerFor]=\\\"user\\\"\\n        *ngIf=\\\"userIsAuthenticated\\\"\\n        class=\\\"user_btn\\\"\\n      >\\n        <img [src]=\\\"userData.avatar\\\" class=\\\"user\\\" />\\n      </button>\\n      <mat-menu #user=\\\"matMenu\\\">\\n        <button mat-menu-item routerLink=\\\"/user/setting\\\">\\n          <mat-icon>account_box</mat-icon>\\n          User settings\\n        </button>\\n        <button mat-menu-item routerLink=\\\"/user/post\\\">\\n          <mat-icon>work</mat-icon>\\n          Your post\\n        </button>\\n        <!--\\n        <div *ngFor=\\\"let email of adminEmail\\\">\\n          <div *ngif=\\\"email?.email === 'dongun8943@gmail.com' \\\">\\n            <button mat-menu-item routerLink=\\\"/ifix/document\\\">\\n              <mat-icon>work</mat-icon>\\n              iFix Document\\n            </button>\\n          </div>\\n        </div>\\n        -->\\n        <!--\\n        <button mat-menu-item routerLink=\\\"/ifix/document\\\">\\n          <mat-icon>work</mat-icon>\\n          iFix Document\\n        </button>\\n        -->\\n        <button mat-menu-item (click)=\\\"onLogout()\\\">\\n          <mat-icon>exit_to_app</mat-icon>\\n          Sign out\\n        </button>\\n      </mat-menu>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<!--모바일용 헤더-->\\n<div\\n  *ngIf=\\\"mobileQuery.matches\\\"\\n  [class.example-is-mobile]=\\\"mobileQuery.matches\\\"\\n>\\n  <mat-toolbar class=\\\"example-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <div\\n      class=\\\"col-2 header-left\\\"\\n      style=\\\"font-weight: 700; cursor: pointer\\\"\\n      routerLink=\\\"/\\\"\\n    >\\n      개발자's Community\\n    </div>\\n    <span class=\\\"spacer\\\"> </span>\\n    <button\\n      class=\\\"catergory-button\\\"\\n      mat-icon-button\\n      [matMenuTriggerFor]=\\\"menu\\\"\\n      aria-label=\\\"Example icon-button with a menu\\\"\\n      *ngIf=\\\"!userIsAuthenticated\\\"\\n    >\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item>\\n        <mat-icon>person</mat-icon>\\n        <span><a routerLink=\\\"/login\\\">login</a></span>\\n      </button>\\n      <button mat-menu-item>\\n        <mat-icon>person_add</mat-icon>\\n        <span><a routerLink=\\\"/signup\\\">signup</a></span>\\n      </button>\\n    </mat-menu>\\n    <button\\n      mat-button\\n      [matMenuTriggerFor]=\\\"user\\\"\\n      *ngIf=\\\"userIsAuthenticated\\\"\\n      class=\\\"user_btn\\\"\\n    >\\n      <img [src]=\\\"userData.avatar\\\" class=\\\"user\\\" />\\n    </button>\\n    <mat-menu #user=\\\"matMenu\\\">\\n      <button mat-menu-item routerLink=\\\"/user/setting\\\">\\n        <mat-icon>account_box</mat-icon>\\n        User settings\\n      </button>\\n      <button mat-menu-item routerLink=\\\"/user/post\\\">\\n        <mat-icon>work</mat-icon>\\n        Your post\\n      </button>\\n      <button mat-menu-item (click)=\\\"onLogout()\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        Sign out\\n      </button>\\n    </mat-menu>\\n  </mat-toolbar>\\n  <mat-sidenav-container\\n    class=\\\"example-sidenav-container\\\"\\n    [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\"\\n  >\\n    <mat-sidenav\\n      #snav\\n      [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n      [fixedInViewport]=\\\"mobileQuery.matches\\\"\\n      fixedTopGap=\\\"56\\\"\\n    >\\n      <mat-nav-list\\n        *ngFor=\\\"let cg of catergory; let i = index\\\"\\n        class=\\\"nav-item\\\"\\n        (click)=\\\"sidenavClose()\\\"\\n      >\\n        <div class=\\\"nav-icon\\\">\\n          <i [class]=\\\"cg.className\\\"></i>\\n        </div>\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLink]=\\\"['/catergory', cg.fileNav]\\\"\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n          style=\\\"font-size: 0.8rem\\\"\\n          >{{ cg.name }}</a\\n        >\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <!--모바일용 바디-->\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"content\\\">\\n    <form [formGroup]=\\\"postForm\\\" (submit)=\\\"onNgSubmit()\\\" novalidate>\\n      <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"post-header\\\">\\n          <label class=\\\"input-group-text title-label\\\">Title</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control title-input mr-5\\\"\\n            formControlName=\\\"title\\\"\\n            placeholder=\\\"Post Title\\\"\\n            >\\n          <div class=\\\"input-group catergory-select\\\">\\n            <select class=\\\"custom-select\\\" formControlName=\\\"catergory\\\">\\n              <option [ngValue]=\\\"null\\\" disabled>Choose a catergory</option>\\n              <option *ngFor=\\\"let cg of catergory\\\" [ngValue]=\\\"cg.name\\\"> <!--이게 주의할 점이 body로 넘겨줄때는 name, queryString으로 넘겨줄때는 fileNav로 해야함...-->\\n                {{ cg.name }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n      <span *ngIf=\\\"postForm.get('title').invalid && postForm.get('title').touched\\\" style=\\\"color:red;\\\">The title is three to fifty characters long.</span>\\n      <br/>\\n      <div class=\\\"row justify-content-md-center\\\">\\n        <!--\\n          <div [ngxSummernote]=\\\"config\\\" (summernoteModelChange)=\\\"myEventHanlder($event)\\\"></div>\\n        -->\\n        <!--\\n        <div [ngxSummernote]=\\\"config\\\" (imagePath)=\\\"getImagePath($event)\\\" name=\\\"content\\\" #content=\\\"ngModel\\\" required ngModel></div>\\n        -->\\n        <div [ngxSummernote]=\\\"config\\\" formControlName=\\\"content\\\"></div>\\n      </div>\\n      <div class=\\\"post-footer\\\">\\n        <button class=\\\"btn save\\\" [disabled]=\\\"postForm.invalid\\\" [class.disabled]=\\\"postForm.invalid\\\">save</button>\\n      </div>\\n    </form>\\n    <!--<p>Form value: {{ postForm.value | json }}</p> -->\\n    <!--\\n    <div [innerHTML]=\\\"content\\\">\\n    </div>\\n    -->\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"post\\\">\\n  <!--제목-->\\n  <h3 class=\\\"title\\\">{{post.title}}</h3>\\n  <!--작성자/아바타 + 작성일자-->\\n  <div class=\\\"write\\\">\\n    <div>\\n      <div>\\n        <img [src]=\\\"post?.avatar\\\" class=\\\"avatar mr-2\\\">\\n        <small class=\\\"text-muted\\\">{{post.writer}}</small>\\n      </div>\\n      <small class=\\\"text-muted\\\">{{post.post_date | date: \\\"yyyy-MM-dd hh:mm a\\\":\\\"UTC\\\"}}</small>\\n      <div *ngIf=\\\"userNickname === post.writer\\\" style=\\\"display: inline-block;\\\">\\n        <small class=\\\"text-muted span-text\\\"><a [routerLink]=\\\"['/post', post.post_no]\\\"class=\\\"modify\\\">modify</a></small>\\n        <small class=\\\"text-muted span-text\\\"><a (click)=\\\"onDelete(post.post_no)\\\" class=\\\"delete\\\">delete</a></small>\\n      </div>\\n      <!--\\n      <div class=\\\"content-identity\\\">\\n        <i class=\\\"far fa-eye\\\"></i> {{post?.views}} views\\n      </div>\\n      -->\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"content\\\" [innerHTML]=\\\"post.content | sanitizeHtml\\\"></div>\\n  <div class=\\\"voteblame\\\">\\n      <a class=\\\"ab-btn-vote\\\" (click)=\\\"onVote(1)\\\">\\n        <span class=\\\"vote-top\\\">\\n          <i class=\\\"far fa-thumbs-up\\\" *ngIf=\\\"!isLike; else elseBlock1\\\"></i>\\n          <ng-template #elseBlock1><i class=\\\"fas fa-thumbs-up\\\"></i></ng-template>\\n          <small class=\\\"voted-count\\\">{{likeHate?.total_like}}</small>\\n        </span>\\n        <span class=\\\"vote-bottom\\\">Likes</span>\\n      </a>\\n      <a class=\\\"ab-btn-vote ml-3\\\" (click)=\\\"onVote(-1)\\\">\\n          <span class=\\\"vote-top\\\">\\n            <i class=\\\"far fa-thumbs-down\\\" *ngIf=\\\"!isHate; else elseBlock2\\\"></i>\\n            <ng-template #elseBlock2><i class=\\\"fas fa-thumbs-down\\\"></i></ng-template>\\n            <small class=\\\"voted-count\\\">{{likeHate?.total_hate}}</small>\\n          </span>\\n          <span class=\\\"vote-bottom\\\">Hates</span>\\n        </a>\\n  </div>\\n  <!--댓글-->\\n  <!--cols는 이 요소의 너비를 나타내는 속성으로, 한 줄에 몇 글자까지 들어가게 할 지를 정합니다.\\n  rows는 textarea의 높이를 나타내는 속성으로, 이 요소의 높이가 몇 줄로 나타날지를 정해줍니다. -->\\n  <h5 class=\\\"mt-5\\\">Comments {{post.reply_cnt}}</h5>\\n  <div class=\\\"comments\\\">\\n    <form #replyForm=\\\"ngForm\\\" (ngSubmit)=\\\"onNgReplySubmit(replyForm)\\\" novalidate>\\n      <textarea name=\\\"reply\\\" required ngModel #reply=\\\"ngModel\\\"></textarea>\\n      <button class=\\\"btn register\\\" type=\\\"submit\\\" [disabled]=\\\"replyForm.invalid\\\">send</button>\\n    </form>\\n  </div>\\n  <div class=\\\"article-comments\\\">\\n    <ul class=\\\"reply\\\" *ngFor=\\\"let reply of replys; let i = index\\\">\\n      <li>\\n        <div class=\\\"comment-box\\\">\\n          <div class=\\\"info\\\">{{reply.writer}}</div>\\n          <div class=\\\"text-wrap\\\">{{reply.content}}</div>\\n          <div class=\\\"info-base\\\">{{reply.reply_date | date: \\\"yyyy-MM-dd hh:mm\\\":\\\"UTC\\\"}} | <a style=\\\"cursor: pointer;\\\" (click)=\\\"onReplyDelete(i, reply.reply_no)\\\">delete</a></div>\\n          <div class=\\\"box-tool\\\">\\n            <a class=\\\"box-btn-reply\\\" (click)=\\\"selectItem(reply.reply_no)\\\" style=\\\"cursor: pointer;\\\">\\n              <strong class=\\\"reply_txt\\\">reply {{reply.count}}</strong>\\n              <span class=\\\"reply_cnt\\\"></span>\\n            </a>\\n          </div>\\n          <div class=\\\"reply-comments comments\\\" [class.active]=\\\"reply.reply_view\\\">\\n            <ul class=\\\"reply\\\" *ngFor=\\\"let rreply of rreplys; let i = index\\\">\\n              <li>\\n                <div class=\\\"comment-box\\\">\\n                  <div class=\\\"info\\\">{{rreply.writer}}</div>\\n                  <div class=\\\"text-wrap\\\">{{rreply.content}}</div>\\n                  <div class=\\\"info-base\\\">{{rreply.reply_date | date: \\\"yyyy-MM-dd hh:mm\\\":\\\"UTC\\\"}} | <a style=\\\"cursor: pointer;\\\" (click)=\\\"onReplyDelete(i, rreply.reply_no, reply.reply_no)\\\">delete</a></div>\\n                </div>\\n              </li>\\n            </ul>\\n            <form #rreplyForm=\\\"ngForm\\\" (ngSubmit)=\\\"onNgRReplySubmit(rreplyForm, reply.reply_no)\\\" novalidate>\\n              <!--input tpye=hidden은 어떻게 값을 전달하는 거지. 전달이 안됨. -->\\n              <textarea name=\\\"rreply\\\" required ngModel #rreply=\\\"ngModel\\\"></textarea>\\n              <button class=\\\"btn register\\\" type=\\\"submit\\\" [disabled]=\\\"rreplyForm.invalid\\\">send</button>\\n            </form>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div *ngIf=\\\"addButton\\\" class=\\\"add-button\\\">\\n    <button class=\\\"btn btn-primar\\\" (click)=\\\"onloadReply()\\\">더보기</button>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatToolbarModule,\n  MatListModule,\n  MatCardModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatDialogModule,\n  MatChipsModule\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatChipsModule\n  ]\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./auth/login/login.component\";\nimport { SignupComponent } from \"./auth/signup/signup.component\";\nimport { PostCreateComponent } from \"./post/post-create/post-create.component\";\nimport { AuthGuard } from \"./auth/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent },\n  { path: \"post\", component: PostCreateComponent, canActivate: [AuthGuard] }, // 잘못된 접근을 막을 수 있음\n  {\n    path: \"post/:postId\",\n    component: PostCreateComponent,\n    canActivate: [AuthGuard],\n  }, // 잘못된 접근을 막을 수 있음\n];\n// {scrollPositionRestoration: 'top'}\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, DoCheck, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AuthService } from './auth/auth.service';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { GoogleAnalyticsEventsService } from './google-analytics-events-service';\ndeclare var ga: Function;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, DoCheck {\n  href: string;\n  isView: boolean;\n  mobileQuery: MediaQueryList;\n\n  constructor(public router: Router, public googleAnalyticsEventsService: GoogleAnalyticsEventsService,\n    media: MediaMatcher, private authService: AuthService) {\n    this.isView = true;\n    this.mobileQuery = media.matchMedia('(min-width: 576px)');\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        ga('set', 'page', event.urlAfterRedirects);\n        ga('send', 'pageview');\n      }\n    });\n  }\n  submitEvent() { // event fired from home.component.html element (button, link, ... )\n    this.googleAnalyticsEventsService.emitEvent(\"testCategory\", \"testAction\", \"testLabel\", 10);\n  }\n\n\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n\n  // 로그인, 회원가입일때는 전체화면을 위한...\n  ngDoCheck() {\n    this.href = this.router.url;\n\n    if (this.href === '/login' || this.href === '/signup') {\n      this.isView = false;\n    } else {\n      this.isView = true;\n    }\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AngularMaterialModule } from \"./angular-material.module\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { BodyModule } from \"./body/body.module\";\nimport { AppRoutingModule } from \"./app-rounting.module\";\nimport { PostCreateComponent } from \"./post/post-create/post-create.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgxSummernoteDirective } from \"./post/ngx-summernote.directive\";\nimport { ErrorComponent } from \"./error/error.component\";\nimport { ErrorInterceptor } from \"./error-interceptor\";\nimport { AuthIntercepter } from \"./auth/auth-intercepter\";\nimport { PostListComponent } from \"./post/post-list/post-list.component\";\nimport { SanitizeHtmlPipe } from \"./sanitize-html-pipe\";\nimport { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } from \"ng-recaptcha\";\n\nimport {\n  MatTableModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatSortModule,\n  MatPaginatorModule,\n} from \"@angular/material\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PostCreateComponent,\n    NgxSummernoteDirective,\n    ErrorComponent,\n    PostListComponent,\n    SanitizeHtmlPipe,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    AppRoutingModule,\n    AuthModule,\n    FormsModule,\n    BodyModule,\n    ReactiveFormsModule,\n    RecaptchaV3Module,\n    FormsModule,\n    MatTableModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSortModule,\n    MatPaginatorModule,\n    /*NgxSummernoteModule*/\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthIntercepter, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    {\n      provide: RECAPTCHA_V3_SITE_KEY,\n      useValue: \"6Lf128MUAAAAAH841QayrFoQj0y0C6GCFYpanXh5\",\n    },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent], // 진입 컴포넌트는 NgModule가 시작되하거나 라우팅되면서 접속 주소가 변경될 때 사용됩니다.\n  // 컴포넌트는 용도에 따라 두 종류로 구분할 수 있습니다. 하나는 템플릿에서 셀렉터로 사용하는 컴포넌트이며,\n  // 다른 하나는 모듈에서 명시적으로 지정하는 진입 컴포넌트입니다.\n})\nexport class AppModule {}\n","// 클라이언트 단에서 auth.guard.ts로 잘못된 접근을 막을 수는 있지만, 뚫릴수도 있음\n// 따라서 서버에다가 토큰을 보내서 토큰 검사를 해 실제 글을 쓸 수 있는 기능을 제한해둠.\n// forward proxy 기능도 동일.\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthIntercepter implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken)\n    });\n    // 헤더에 토큰을 추가해서 요청\n    return next.handle(authRequest);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HelpComponent } from './help/help.component';\nimport { ResetComponent } from './reset/reset.component';\n\nconst routers: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'help', component: HelpComponent },\n  { path: 'reset', component: ResetComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routers)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","// 인증되지 않은 사용자가 잘못된 경로로 접근하려고 할 때, 클라이언트 단에서 막음\n\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CommonModule } from '@angular/common';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { HelpComponent } from './help/help.component';\nimport { ResetComponent } from './reset/reset.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n    HelpComponent,\n    ResetComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AuthData } from './auth-data.module';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authStatusListener = new Subject<boolean>();\n  private token: string;\n  private tokenTimer: any;\n  private isAuthenticated = false;\n\n  private userId: string;\n  private nickname: string;\n  private avatar: string;\n\n  userAuthority = new Subject<any>();\n\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // 상태변화리스너 생성\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getUserData() {\n    return {\n      userId: this.userId,\n      userNickname: this.nickname,\n      avatar: this.avatar\n    };\n  }\n  // 사용자 인증여부 반환\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  // 토큰 반환\n  getToken() {\n    return this.token;\n  }\n\n  // 처음 화면 로딩할때 실행되는 함수 -> 토큰 재설정\n  autoAuthUser() {\n    // 로컬 저장소에 저장되어있는 정보를 불러온다\n    const authInformation = this.getAuthData();\n    if (!authInformation) { // 정보가 없다면 그냥 패스\n      return;\n    }\n    // 토큰 유효성 검사\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.nickname = authInformation.nickname;\n      this.avatar = authInformation.avatar;\n\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  // 로그인 처리\n  login(email: string, password: string, token: string) {\n    // 형식틀을 정형화시킴\n    const postData = {\n      email: email,\n      password: password,\n      token : token\n    };\n    // 로그인 정보를 서버에 보냄\n    this.http.post<{token: string, expiresIn: number, userId: string, nickname: string, avatar: string}>(BACKED_URL + '/user/login', postData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n\n        // 토큰 검사\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          // 토큰 유효시간이 되면 자동 로그아웃되도록! 토큰은 메모리에만 저장되기때문에\n          // reload하면 로그아웃되보리는 문제가 발생함\n          this.setAuthTimer(expiresInDuration);\n\n          this.userId = response.userId;\n          this.nickname = response.nickname;\n          this.avatar = response.avatar;\n          console.log(this.avatar);\n\n          this.isAuthenticated = true;\n\n          // local storage는 브라우저가 관리하는 저장소. 거기다가 저장해줘야 reload하거나\n          // 껏다가 켜도 유지가 됨\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000); // 실제 종료시간 측정\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate, this.userId, this.nickname, this.avatar);\n\n          this.authStatusListener.next(true);\n          this.router.navigate(['/']);\n        }\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  // 회원가입 처리\n  createUser(email: string, password: string, firstName: string, lastName: string, nickName: string, gender: string, token: string) {\n    const authCreateData = {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      nickName: nickName,\n      gender: gender,\n      token: token\n    };\n    this.http.post(BACKED_URL + '/user/signup', authCreateData)\n      .subscribe(() => {\n        // 회원가입 성공적이면 메인페이지로 이동\n        alert('Please authenticate with the e-mail you used to sign up.');\n        this.router.navigate(['/']);\n      }, error => {\n        // 에러발생\n        this.authStatusListener.next(false);\n      });\n  }\n\n  logout() {\n    this.token = null;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  // 토큰 유효시간이 되면 자동으로 로그아웃 되도록..\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n      alert('Automatically logged out over time.');\n    }, duration * 1000); // ms단위이기 때문에\n  }\n\n  // 로컬저장소에 저장하는 메소드\n  private saveAuthData(token: string, expirationDate: Date, userId: string, nickname: string, avatar: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationDate', expirationDate.toString());\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('nickname', nickname);\n    localStorage.setItem('avatar', avatar);\n  }\n\n  // 로그아웃시 로컬저장소에 삭제하는 메소드\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('nickname');\n    localStorage.removeItem('avatar');\n  }\n\n  // 로컬저장소에 저장한걸 불러오는 메소드\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expirationDate');\n    const userId = localStorage.getItem('userId');\n    const nickname = localStorage.getItem('nickname');\n    const avatar = localStorage.getItem('avatar');\n\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId,\n      nickname: nickname,\n      avatar: avatar\n    }\n  }\n\n  // 회원정보 요청\n  getUserAccount() {\n    const queryParams = `?email=${this.getUserData().userId}`;\n    // 로그인 정보를 서버에 보냄\n    return this.http.get<{first_name: string, last_name: string, gender: string, avatar: string}>(BACKED_URL +\n      '/user/search' + queryParams);\n  }\n\n  // 회원정보 수정\n  setUserAccount(password: string, imagePath: File | string, nickname: string) {\n    let postData: any | FormData;\n      // 이미지 객체인 경우 -> form 형식 전달\n    if(typeof(imagePath) === 'object') {\n      postData = new FormData();\n      postData.append(\"email\", this.getAuthData().userId);\n      postData.append(\"password\", password);\n      postData.append(\"image\", imagePath);\n      postData.append(\"nickname\", nickname);\n    } else { // 이미지 경로인 경우 -> json형식 전달\n      postData = {email: this.getAuthData().userId ,password: password, image: imagePath, nickname: nickname};\n    }\n    this.http.put<{message: string, imagePath: string}>(BACKED_URL + '/user', postData)\n        .subscribe(() => {\n            alert('Member information has been modified successfully. Please log in again.');\n            this.logout();\n            this.router.navigate(['/']);\n        });\n  }\n\n  // 비번 리셋을 위한 확인 이메일\n  confirmUser(email: string) {\n    console.log('이거 진짜 2번 보내지는거냐?');\n    this.http.get<{message: string}>(BACKED_URL + '/user/confirm?email=' + email)\n      .subscribe(() => {\n\n      });\n  }\n\n  passwordReset(email: string, key: string, password: string) {\n    const postData = {\n      email: email,\n      key: key,\n      password: password,\n    };\n    console.log(postData);\n    // 게시글 정보를 서버에 전송\n    this.http.post(BACKED_URL + '/user/passwordReset', postData)\n      .subscribe(() => { // 정상적으로 넘어오면\n        alert('Password setting is complete. Please sign in again.');\n        this.router.navigate(['/login']);\n      });\n  }\n\n  getUserAuthority() {\n    this.http.get<{email: string[]}>(BACKED_URL + '/user/authority')\n        .subscribe((email) => {\n\n          this.userAuthority.next(email);\n          // console.log(email);\n    });\n}\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top:100px;\\n}\\n\\n.logo {\\n  max-width: 300px;\\n}\\n\\nh1, h6{\\n  font-weight: bold;\\n}\\n\\n.row {\\n  margin:0px;\\n}\\n\\nspan {\\n  color:#FF9000;\\n}\\n\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n  }\\n  * {\\n    font-size: 0.9rem;\\n  }\\n  .logo {\\n    max-width: 200px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9oZWxwL2hlbHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7O0FBQ0E7RUFDRSxVQUFVO0FBQ1o7O0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7O0FBQ0E7RUFDRTtJQUNFLGNBQWM7RUFDaEI7RUFDQTtJQUNFLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsZ0JBQWdCO0VBQ2xCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2hlbHAvaGVscC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDoxMDBweDtcbn1cblxuLmxvZ28ge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuaDEsIGg2e1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5yb3cge1xuICBtYXJnaW46MHB4O1xufVxuc3BhbiB7XG4gIGNvbG9yOiNGRjkwMDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgOmhvc3Qge1xuICAgIG1hcmdpbi10b3A6MHB4O1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICB9XG4gIC5sb2dvIHtcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-auth-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n  email: string;\n  sumitBool: boolean;\n\n  ngOnInit() {\n    this.sumitBool = false;\n  }\n\n  constructor(private authService: AuthService) {\n\n  }\n\n  onNgSubmit(emailForm: NgForm) {\n    if (emailForm.invalid) {\n      return;\n    }\n    this.sumitBool = true;\n    this.authService.confirmUser(emailForm.value.email);\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 250px;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top: 0px;\\n  }\\n}\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n.text-center {\\n  text-align: center !important;\\n  height: 100%;\\n}\\n.form-signin {\\n  width: 100%;\\n  max-width: 330px;\\n  padding: 15px;\\n  margin: auto;\\n}\\n.font-weight-normal {\\n  font-weight: 400 !important;\\n}\\nmat-spinner {\\n  margin: auto;\\n  z-index: 2;\\n}\\n.logo {\\n  max-width: 300px;\\n}\\nbutton {\\n  background-color: #e599f7;\\n  color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0U7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsNkJBQTZCO0VBQzdCLFlBQVk7QUFDZDtBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsWUFBWTtBQUNkO0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7QUFFQTtFQUNFLFlBQVk7RUFDWixVQUFVO0FBQ1o7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDI1MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBtYXJnaW4tdG9wOiAwcHg7XG4gIH1cbn1cbmlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cbi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mb3JtLXNpZ25pbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDMzMHB4O1xuICBwYWRkaW5nOiAxNXB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5mb250LXdlaWdodC1ub3JtYWwge1xuICBmb250LXdlaWdodDogNDAwICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1zcGlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xuICB6LWluZGV4OiAyO1xufVxuLmxvZ28ge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1OTlmNztcbiAgY29sb3I6IHdoaXRlO1xufVxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ReCaptchaV3Service } from 'ng-recaptcha';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  // 로그인 상태 검사를 하기 위해...\n  isLoding = false;\n  private authStatusSub: Subscription;\n\n  public recentToken: string = '';\n  private singleExecutionSubscription: Subscription;\n\n\n  constructor(public authService: AuthService, public router: Router, private recaptchaV3Service: ReCaptchaV3Service) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        if (authStatus) { // 로그인 성공하면\n          this.isLoding = false;\n          this.authService.getUserAuthority();\n        }\n        else { // 로그인 실패하면\n          this.isLoding = false;\n        }\n      }\n    );\n  }\n\n  onNgSubmit(loginForm: NgForm) {\n    if (loginForm.invalid) {\n      return;\n    }\n    this.singleExecutionSubscription = this.recaptchaV3Service.execute('login')\n      .subscribe((token) => {\n        this.recentToken = token;\n\n        this.isLoding = true;\n        this.authService.login(loginForm.value.email, loginForm.value.password, this.recentToken);\n      });\n\n  }\n\n  ngOnDestroy() {\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top:100px;\\n}\\n\\n.logo {\\n  max-width: 300px;\\n}\\n\\nh1, h6{\\n  font-weight: bold;\\n}\\n\\n.row {\\n  margin:0px;\\n}\\n\\nspan {\\n  color:#FF9000;\\n}\\n\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n  }\\n  * {\\n    font-size: 0.9rem;\\n  }\\n  .logo {\\n    max-width: 200px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9yZXNldC9yZXNldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFDQTtFQUNFLFVBQVU7QUFDWjs7QUFDQTtFQUNFLGFBQWE7QUFDZjs7QUFDQTtFQUNFO0lBQ0UsY0FBYztFQUNoQjtFQUNBO0lBQ0UsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVzZXQvcmVzZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6MTAwcHg7XG59XG5cbi5sb2dvIHtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbn1cbmgxLCBoNntcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4ucm93IHtcbiAgbWFyZ2luOjBweDtcbn1cbnNwYW4ge1xuICBjb2xvcjojRkY5MDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBtYXJnaW4tdG9wOjBweDtcbiAgfVxuICAqIHtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgfVxuICAubG9nbyB7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { PasswordValidator } from '../signup/password-validator';\nimport { Params, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-auth-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  email: string;\n  key: string;\n  resetFormGroup: FormGroup;\n\n  ngOnInit() {\n    this.resetFormGroup = new FormGroup({\n      passwordGroup: new FormGroup({\n        password: new FormControl(null, [Validators.required, Validators.pattern('(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}')]),\n        confirmPassword: new FormControl(null, Validators.required)\n      }, PasswordValidator.match),\n    });\n\n    this.route.queryParams.subscribe((param: Params) => {\n      this.email = param.email;\n      this.key = param.key;\n    });\n  }\n\n  constructor(private route: ActivatedRoute, private authService: AuthService) {\n\n  }\n\n  onSubmit() {\n    if (this.resetFormGroup.invalid) {\n      return;\n    }\n    this.authService.passwordReset(this.email, this.key, this.resetFormGroup.value.passwordGroup.password);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\nexport class PasswordValidator {\n  static match(form: AbstractControl) {\n    // 매개변수로 전달받은 검증 대상 폼 모델에서 password와 confirmPassword을 취득\n    const password = form.get('password').value;\n    const confirmPassword = form.get('confirmPassword').value;\n\n    // password와 confirmPassword의 값을 비교한다.\n    if (password !== confirmPassword) {\n      // 검증에 실패한 경우, 에러 객체를 반환한다.\n      return { match: { password, confirmPassword }};\n    } else {\n      // 검증에 성공한 경우, null을 반환한다.\n      return null;\n    }\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 100px;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top: 0px;\\n  }\\n}\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n.logo {\\n  width: 300px;\\n  height: 200px;\\n}\\n.text-center {\\n  text-align: center !important;\\n  height: 100%;\\n}\\n.form-signin {\\n  padding: 15px;\\n  margin: auto;\\n}\\n.font-weight-normal {\\n  font-weight: 400 !important;\\n}\\n.text-field {\\n  padding: 50px 10%;\\n  border-radius: 10px;\\n  background-color: #f2f3f4;\\n}\\n.form-group {\\n  text-align: left;\\n}\\n.form-group label {\\n  font-weight: 600;\\n}\\n.field-group-name {\\n  width: 100%;\\n  text-align: left;\\n}\\ninput[type=\\\"file\\\"] {\\n  visibility: hidden;\\n}\\nbutton {\\n  background-color: #e599f7;\\n  color: white;\\n}\\n.scroll {\\n  overflow-y: scroll;\\n  height: 180px;\\n  margin-top: 18px;\\n  border: 1px #bbb solid;\\n}\\n.policy_cont {\\n  padding: 12px;\\n  line-height: 20px;\\n  color: #555;\\n  text-align: left;\\n  font-size: 0.9em;\\n}\\n.policy_check {\\n  text-align: right;\\n  margin-top: 17px;\\n  font-size: 11.65px;\\n  color: #333;\\n}\\n.checkbox {\\n  position: relative;\\n  display: inline-block;\\n  vertical-align: top;\\n  padding-left: 16px;\\n}\\n.checkbox input[type=\\\"checkbox\\\"],\\nlabel {\\n  cursor: pointer;\\n}\\n@media (max-width: 575.98px) {\\n  form * {\\n    font-size: 90%;\\n  }\\n  .form-signin {\\n    width: 90%;\\n  }\\n}\\n@media (min-width: 575.98px) and (max-width: 1000px) {\\n  .form-signin {\\n    width: 60%;\\n  }\\n}\\n@media (min-width: 1000px) {\\n  .form-signin {\\n    width: 40%;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtBQUNmO0FBQ0E7RUFDRSw2QkFBNkI7RUFDN0IsWUFBWTtBQUNkO0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtBQUNkO0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCO0FBQ0E7O0VBRUUsZUFBZTtBQUNqQjtBQUNBO0VBQ0U7SUFDRSxjQUFjO0VBQ2hCO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQUNBO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQUNBO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMTAwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgOmhvc3Qge1xuICAgIG1hcmdpbi10b3A6IDBweDtcbiAgfVxufVxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuLmxvZ28ge1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogMjAwcHg7XG59XG4udGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZm9ybS1zaWduaW4ge1xuICBwYWRkaW5nOiAxNXB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5mb250LXdlaWdodC1ub3JtYWwge1xuICBmb250LXdlaWdodDogNDAwICFpbXBvcnRhbnQ7XG59XG5cbi50ZXh0LWZpZWxkIHtcbiAgcGFkZGluZzogNTBweCAxMCU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjQ7XG59XG4uZm9ybS1ncm91cCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4uZm9ybS1ncm91cCBsYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG4uZmllbGQtZ3JvdXAtbmFtZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTU5OWY3O1xuICBjb2xvcjogd2hpdGU7XG59XG4uc2Nyb2xsIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBoZWlnaHQ6IDE4MHB4O1xuICBtYXJnaW4tdG9wOiAxOHB4O1xuICBib3JkZXI6IDFweCAjYmJiIHNvbGlkO1xufVxuLnBvbGljeV9jb250IHtcbiAgcGFkZGluZzogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjNTU1O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDAuOWVtO1xufVxuLnBvbGljeV9jaGVjayB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW4tdG9wOiAxN3B4O1xuICBmb250LXNpemU6IDExLjY1cHg7XG4gIGNvbG9yOiAjMzMzO1xufVxuLmNoZWNrYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHBhZGRpbmctbGVmdDogMTZweDtcbn1cbi5jaGVja2JveCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5sYWJlbCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOThweCkge1xuICBmb3JtICoge1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuICB9XG4gIC5mb3JtLXNpZ25pbiB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NS45OHB4KSBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIC5mb3JtLXNpZ25pbiB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAuZm9ybS1zaWduaW4ge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { PasswordValidator } from \"./password-validator\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth.service\";\nimport { ReCaptchaV3Service } from \"ng-recaptcha\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  signupForm: FormGroup;\n  isLoding = false;\n  private authStatusSub: Subscription;\n\n  public recentToken: string = \"\";\n  private singleExecutionSubscription: Subscription;\n\n  constructor(\n    public authService: AuthService,\n    private recaptchaV3Service: ReCaptchaV3Service\n  ) {}\n\n  ngOnInit() {\n    // 리엑티브 폼 방식의 구현 / 검증\n    this.signupForm = new FormGroup({\n      lastName: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[ㄱ-ㅎ|가-힣|a-z|A-Z]{1,20}\"),\n      ]),\n      firstName: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[ㄱ-ㅎ|가-힣|a-z|A-Z]{2,20}\"),\n      ]),\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email],\n      }),\n      passwordGroup: new FormGroup(\n        {\n          password: new FormControl(null, [\n            Validators.required,\n            Validators.pattern(\n              \"(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}\"\n            ),\n          ]),\n          confirmPassword: new FormControl(null, Validators.required),\n        },\n        PasswordValidator.match\n      ),\n      nickName: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9]{3,20}\"),\n      ]),\n      gender: new FormControl(\"male\"),\n    });\n  }\n\n  onSubmit() {\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.singleExecutionSubscription = this.recaptchaV3Service\n      .execute(\"login\")\n      .subscribe((token) => {\n        this.recentToken = token;\n\n        this.isLoding = true;\n        this.authService.createUser(\n          this.signupForm.value.email,\n          this.signupForm.value.passwordGroup.password,\n          this.signupForm.value.firstName,\n          this.signupForm.value.lastName,\n          this.signupForm.value.nickName,\n          this.signupForm.value.gender,\n          this.recentToken\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatergoryComponent } from './catergory/catergory.component';\nimport { BodyComponent } from './body.component';\nimport { PostListComponent } from '../post/post-list/post-list.component';\nimport { UserComponent } from './user/user.component';\nimport { SearchComponent } from './search/search.component';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BodyComponent,\n    children: [\n      { path: '', component: HomeComponent }\n    ]\n  },\n  {\n    path: 'catergory',\n    component: BodyComponent,\n    children: [\n      { path: ':postId', component: CatergoryComponent }\n    ]\n  },\n  {\n    path: 'catergory',\n    component: BodyComponent,\n    children: [\n      { path: ':postId/:post_no', component: PostListComponent }\n    ], // 라우터를 이용해 동적 데이터 전달\n    // runGuardsAndResolvers: 'paramsChange'\n  },\n  {\n    path: 'user',\n    component: BodyComponent,\n    children: [\n      { path: ':kinds', component: UserComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  {\n    path: 'search',\n    component: BodyComponent,\n    children: [\n      { path: '', component: SearchComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BodyRoutingModule {\n\n}\n","module.exports = \"\\nnav {\\n  background-color: white !important;\\n}\\n.banner {\\n  max-width:160px;\\n  height: 600px;\\n  margin-top: 130px;\\n  margin-left : 20px;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9ib2R5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0Usa0NBQWtDO0FBQ3BDO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvYm9keS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5uYXYge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xufVxuLmJhbm5lciB7XG4gIG1heC13aWR0aDoxNjBweDtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgbWFyZ2luLXRvcDogMTMwcHg7XG4gIG1hcmdpbi1sZWZ0IDogMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIl19 */\"","import { Component, Inject, ViewChild, ElementRef, OnInit, AfterViewInit, OnDestroy, HostListener } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\nimport { Location, PopStateEvent } from \"@angular/common\";\nimport { Subscription, SubscriptionLike } from 'rxjs';\nimport { CatergoryService } from './catergory/catergory.service';\n\ninterface ScrollPositionRestore {\n  event: Event;\n  positions: { [K: number]: number };\n  trigger: 'imperative' | 'popstate' | 'hashchange';\n  idToRestore: number;\n}\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\nexport class BodyComponent implements OnInit, AfterViewInit, OnDestroy {\n  private lastPoppedUrl: string;\n  private yScrollStack: number[] = [];\n  private routerEvent: Subscription;\n  private loactionEvent: SubscriptionLike;\n\n  constructor(private router: Router, private location: Location, private catergoryService: CatergoryService) {}\n\n  ngAfterViewInit() {\n    this.loactionEvent = this.location.subscribe((ev: PopStateEvent) => { // 뒤로가기에만 호출되는듯?\n      // console.log('location : ' + ev.url);\n      this.lastPoppedUrl = ev.url;\n      this.loactionEvent.unsubscribe();\n    });\n\n    this.routerEvent = this.router.events.subscribe((ev: any) => {\n        if (ev instanceof NavigationStart) {\n            // console.log('NavigationStart : ' + ev.url + ', ' + this.lastPoppedUrl);\n            if (ev.url !== this.lastPoppedUrl) {\n              this.catergoryService.setyScrollStack(window.scrollY);\n            }\n        } else if (ev instanceof NavigationEnd) {\n            // console.log('NavigationEnd : ' + ev.url + ', ' + this.lastPoppedUrl);\n            if (ev.url === this.lastPoppedUrl) { // 이전 url과 같으면.. 그니까 되돌아가는거면 복원\n                this.lastPoppedUrl = undefined;\n                // this.catergoryService.getyScrollStack();\n                // console.log('복원 : ' + this.catergoryService.getyScrollStack());\n                window.scrollTo(0,  this.catergoryService.getyScrollStack());\n            } else { // 아니라면 탑\n              window.scrollTo(0, 0);\n            }\n            this.routerEvent.unsubscribe();\n        }\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  onNgSubmit(searchForm: NgForm) {\n    if (searchForm.invalid) {\n      return;\n    }\n    this.router.navigate(['/search'], { queryParams: { searchInput: searchForm.value.searchInput } });\n  }\n\n  ngOnDestroy() {\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { NavComponent } from './nav/nav.component';\nimport { BodyRoutingModule } from './body-routing.module';\nimport { BodyComponent } from './body.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { UserComponent } from './user/user.component';\nimport { UserSettingComponent } from './user/setting/user-setting.component';\nimport { UserPostComponent } from './user/post/user-post.component';\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeModule } from './home/home.module';\nimport { CatergoryModule } from './catergory/catergory.module';\n\n@NgModule({\n  declarations: [\n    BodyComponent,\n    NavComponent,\n    UserComponent,\n    UserSettingComponent,\n    UserPostComponent,\n    SearchComponent,\n  ],\n  imports: [\n    CommonModule,\n    HomeModule,\n    CatergoryModule,\n    AngularMaterialModule,\n    BodyRoutingModule,\n    InfiniteScrollModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class BodyModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvY2F0ZXJnb3J5L2NhdGVyZ29yeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { CatergoryService } from './catergory.service';\n\n@Component({\n  selector: 'app-catergory',\n  templateUrl: './catergory.component.html',\n  styleUrls: ['./catergory.component.css']\n})\nexport class CatergoryComponent {\n  constructor(private catergoryService: CatergoryService) {\n\n  }\n  // 스크롤 복원과 무한 스크롤간의 문제 해결법...\n  // 1. 네이버나 이런 단순 사이트 같은 경우에는 스크롤 복원만 고려해주면 이전 스크롤 복원하는 거는 쉬움.\n  // 인스타그램 경우에는 이미지 위주라서... 이미지는 캐시에 저장하고, 스크롤 이동시에는 스크롤 주위에 약간의 데이터 태그만 보여줌.\n  // 위, 아래는 마진, 패딩으로 채움. 실제 데이터 태그는 부분적이고 유동적임.\n  // 신기한건... 이런 데이터들은 어디에 저장되는 걸까??\n  // 스크롤 위치는 session에 페이지 마다 저장됨. 이걸 이용해서 다시 페이지 접속시 해당페이지로 이동할 수 있는 거임.\n  // 서버와 통신에서 불러오는 거는 처음 불러올때만.. 이후에는 안 불러오던데? 서버와 통신을 안함.\n  onScrollDown() {\n    this.catergoryService.onScrollDownEvent.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CatergoryComponent } from './catergory.component';\nimport { CatergoryNewlyComponent } from './new-post/catergory-newly.component';\nimport { CatergoryPopularComponent } from './popular-post/catergory-popular.component';\nimport { CommonModule } from '@angular/common';\nimport { BodyRoutingModule } from '../body-routing.module';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\n@NgModule({\n  declarations: [\n    CatergoryComponent,\n    CatergoryNewlyComponent,\n    CatergoryPopularComponent\n  ],\n  imports: [\n    CommonModule,\n    BodyRoutingModule,\n    AngularMaterialModule,\n    InfiniteScrollModule\n  ]\n})\nexport class CatergoryModule {}\n","import { Subject } from 'rxjs';\nimport { Post } from 'src/app/shared/post.model';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatergoryService {\n  onScrollDownEvent = new Subject<void>();\n  postsChanged = new Subject<{change: boolean, posts: Post[], pages: number, finish: boolean}>();\n  private finish: boolean;\n  private pages: number;\n  private router: string;\n  private posts: Post[] = [];\n  private yScrollStack: number[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  // 스크롤 저장\n  setyScrollStack(yScroll: number) {\n    console.log('스크롤 저장 : ' + yScroll);\n    this.yScrollStack.push(yScroll);\n  }\n\n  // 스크롤 불러오기\n  getyScrollStack() {\n    console.log('스크롤 호출 : ');\n    return this.yScrollStack.pop();\n  }\n\n  // 게시글 리스트 불러오기(5개씩)\n  getPosts(catergory: string, pages: number, router?: string) {\n    if (this.router === router && router !== undefined) { // 라우터에 변화가 없다면 기존 posts를 전달\n        this.postsChanged.next({\n          change: false,\n          posts: this.posts.slice(),\n          pages: this.pages,\n          finish: this.finish\n        });\n    }\n    else if (router === undefined) { // 단순히 스크롤 다운에 경우\n      this.pages = pages;\n      const queryParams = `?catergory=${catergory}&pages=${this.pages}`;\n\n      this.http.get<{posts: Post[]}>(BACKED_URL + '/post' + queryParams)\n      .pipe(map((postData) => {\n        return postData.posts.map(post => {\n          return {\n            post_no: post.post_no,\n            title: post.title,\n            writer: post.writer,\n            avatar: post.avatar,\n            content: post.content,\n            curtContent: post.content.replace(/(<([^>]+)>)/ig, \"\"),\n            likes: post.likes,\n            views: post.views,\n            catergory: post.catergory,\n            post_date: post.post_date,\n            img_path : post.img_path,\n            reply_cnt: null\n          };\n        });\n      })).subscribe((transformedPosts) => {\n        if (transformedPosts.length === 0) {\n          this.finish = true;\n        }\n        this.posts.push(...transformedPosts);\n        this.postsChanged.next({\n            change: false,\n            posts: this.posts.slice(),\n            pages: this.pages,\n            finish: this.finish\n        });\n        // return true;\n      });\n    }\n    else if (this.router !== router) { // 카테고리가 바뀐경우\n      this.posts = [];\n      this.pages = 1;\n      this.finish = false;\n      this.router = router;\n\n      const queryParams = `?catergory=${catergory}&pages=${this.pages}`;\n\n      this.http.get<{posts: Post[]}>(BACKED_URL + '/post' + queryParams)\n      .pipe(map((postData) => {\n        return postData.posts.map(post => {\n          return {\n            post_no: post.post_no,\n            title: post.title,\n            writer: post.writer,\n            avatar: post.avatar,\n            content: post.content,\n            curtContent: post.content.replace(/(<([^>]+)>)/ig, \"\"),\n            likes: post.likes,\n            views: post.views,\n            catergory: post.catergory,\n            post_date: post.post_date,\n            img_path : post.img_path,\n            reply_cnt: null\n          };\n        });\n      })).subscribe((transformedPosts) => {\n        this.posts.push(...transformedPosts);\n        this.postsChanged.next({\n            change: true,\n            posts: this.posts.slice(),\n            pages: this.pages,\n            finish: this.finish\n        });\n        // return true;\n      });\n    }\n  }\n}\n","module.exports = \".newly-post {\\n  border: 1px solid rgba(0,0,0, 0.3);\\n  box-shadow: 0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12);\\n  margin-bottom: 50px;\\n}\\n.newly-post .newly-post-title {\\n  background-color: rgba(0,0,0, .03);\\n  padding: 10px;\\n  font-family: 'Anton', sans-serif;\\n}\\n.newly-post-parent {\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  overflow-y: scroll;\\n}\\n.newly-post .newly-post-content {\\n  padding: 20px;\\n}\\n.newly-post-content {\\n  border-bottom: 1px solid rgba(0,0,0, 0.3);\\n  box-shadow: 0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12);\\n  margin:10px auto;\\n}\\n.search-results {\\n  height: 20rem;\\n}\\n/*개별 포스트 레이아웃 설정*/\\n.post-cotent {\\n  width:100%;\\n  display:-webkit-box;\\n  display:flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  flex-wrap: nowrap;\\n}\\n.post-left, .post-center, .post-right {\\n  /*border: 1px solid black;*/\\n  height:100px;\\n  flex-shrink: 0;\\n}\\n/*포스트 left*/\\n.post-left {\\n  text-align:center;\\n  flex-basis: 10%;\\n}\\n.post-left button {\\n  padding: 0;\\n  border: none;\\n  outline: none;\\n  background: none;\\n  box-shadow: none;\\n}\\n.votes {\\n  font-size: 1.2rem;\\n}\\n/*포스트 center*/\\n.post-center {\\n  flex-basis: 70%;\\n  flex-shrink: 1;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.title {\\n  font-size: 1.2rem;\\n  font-family: 'Bree Serif', serif;\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n.title a {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  display: block;\\n  color: black;\\n}\\n.content {\\n  font-family: 'PT Sans', sans-serif;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  color: #777;\\n  padding: 5px;\\n}\\n.writer {\\n  padding: 5px;\\n}\\n.avatar {\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  overflow: hidden;\\n}\\n/*포스트 right*/\\n.post-right {\\n  flex-basis: 20%;\\n  text-align: center;\\n  line-height: 100px;\\n  height: 100%;\\n  /*border: 1px solid black;*/\\n}\\n.post-right img {\\n  width: auto; height: auto;\\n  max-width: 206px;\\n  max-height: 100px;\\n  margin: 0 !important;\\n}\\n@media (min-width: 992px) and (max-width: 1199.98px) {\\n  .post-right img  {\\n    max-width: 140px;\\n  }\\n}\\n@media (min-width: 768px) and (max-width: 991.98px) {\\n  .post-right img {\\n    max-width: 100px;\\n  }\\n}\\n@media (min-width: 576px) and (max-width: 767.98px) {\\n  .post-right img {\\n    max-width: 100px;\\n  }\\n}\\n@media (max-width: 576px) {\\n  .post-right img {\\n    max-width: 70px;\\n  }\\n}\\n.finish {\\n  background-color: lightskyblue;\\n  color: white;\\n  text-align: center;\\n  font-size: 2rem;\\n  margin-top: 20px;\\n}\\n@media (max-width: 580px) {\\n  * {\\n    font-size: 0.8rem !important;\\n  }\\n  .content {\\n    max-height: 40px;\\n  }\\n}\\n/*\\n.post-cotent {\\n  padding: 5px;\\n}\\n.post-title, .post-cotent {\\n  display: block;\\n}\\n*/\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9jYXRlcmdvcnkvbmV3LXBvc3QvY2F0ZXJnb3J5LW5ld2x5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQ0FBa0M7RUFDbEMsNkRBQTZEO0VBQzdELG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0Usa0NBQWtDO0VBQ2xDLGFBQWE7RUFDYixnQ0FBZ0M7QUFDbEM7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixvQkFBb0I7RUFDcEIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLHlDQUF5QztFQUN6Qyw2REFBNkQ7RUFDN0QsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQSxpQkFBaUI7QUFDakI7RUFDRSxVQUFVO0VBQ1YsbUJBQVk7RUFBWixZQUFZO0VBQ1osOEJBQW1CO0VBQW5CLDZCQUFtQjtVQUFuQixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsWUFBWTtFQUNaLGNBQWM7QUFDaEI7QUFDQSxXQUFXO0FBQ1g7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0EsYUFBYTtBQUNiO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGNBQWM7RUFDZCxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGtDQUFrQztFQUNsQyxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLDRCQUE0QjtFQUM1QixnQkFBZ0I7QUFDbEI7QUFDQSxZQUFZO0FBQ1o7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxXQUFXLEVBQUUsWUFBWTtFQUN6QixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtBQUN0QjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7QUFFQTtFQUNFLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFO0lBQ0UsNEJBQTRCO0VBQzlCO0VBQ0E7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUVBOzs7Ozs7O0NBT0MiLCJmaWxlIjoic3JjL2FwcC9ib2R5L2NhdGVyZ29yeS9uZXctcG9zdC9jYXRlcmdvcnktbmV3bHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZXdseS1wb3N0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwgMC4zKTtcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwwLDAsLjI0KSwwIDAgMnB4IHJnYmEoMCwwLDAsLjEyKTtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cbi5uZXdseS1wb3N0IC5uZXdseS1wb3N0LXRpdGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwgLjAzKTtcbiAgcGFkZGluZzogMTBweDtcbiAgZm9udC1mYW1pbHk6ICdBbnRvbicsIHNhbnMtc2VyaWY7XG59XG4ubmV3bHktcG9zdC1wYXJlbnQge1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cbi5uZXdseS1wb3N0IC5uZXdseS1wb3N0LWNvbnRlbnQge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuLm5ld2x5LXBvc3QtY29udGVudCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLCAwLjMpO1xuICBib3gtc2hhZG93OiAwIDJweCAycHggcmdiYSgwLDAsMCwuMjQpLDAgMCAycHggcmdiYSgwLDAsMCwuMTIpO1xuICBtYXJnaW46MTBweCBhdXRvO1xufVxuLnNlYXJjaC1yZXN1bHRzIHtcbiAgaGVpZ2h0OiAyMHJlbTtcbn1cbi8q6rCc67OEIO2PrOyKpO2KuCDroIjsnbTslYTsm4Mg7ISk7KCVKi9cbi5wb3N0LWNvdGVudCB7XG4gIHdpZHRoOjEwMCU7XG4gIGRpc3BsYXk6ZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiBub3dyYXA7XG59XG4ucG9zdC1sZWZ0LCAucG9zdC1jZW50ZXIsIC5wb3N0LXJpZ2h0IHtcbiAgLypib3JkZXI6IDFweCBzb2xpZCBibGFjazsqL1xuICBoZWlnaHQ6MTAwcHg7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuLyrtj6zsiqTtirggbGVmdCovXG4ucG9zdC1sZWZ0IHtcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIGZsZXgtYmFzaXM6IDEwJTtcbn1cbi5wb3N0LWxlZnQgYnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3gtc2hhZG93OiBub25lO1xufVxuLnZvdGVzIHtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59XG4vKu2PrOyKpO2KuCBjZW50ZXIqL1xuLnBvc3QtY2VudGVyIHtcbiAgZmxleC1iYXNpczogNzAlO1xuICBmbGV4LXNocmluazogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtZmFtaWx5OiAnQnJlZSBTZXJpZicsIHNlcmlmO1xuICBwYWRkaW5nOiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRpdGxlIGEge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5jb250ZW50IHtcbiAgZm9udC1mYW1pbHk6ICdQVCBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIGNvbG9yOiAjNzc3O1xuICBwYWRkaW5nOiA1cHg7XG59XG4ud3JpdGVyIHtcbiAgcGFkZGluZzogNXB4O1xufVxuLmF2YXRhciB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi8q7Y+s7Iqk7Yq4IHJpZ2h0Ki9cbi5wb3N0LXJpZ2h0IHtcbiAgZmxleC1iYXNpczogMjAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxMDBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICAvKmJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyovXG59XG4ucG9zdC1yaWdodCBpbWcge1xuICB3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDIwNnB4O1xuICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIGFuZCAobWF4LXdpZHRoOiAxMTk5Ljk4cHgpIHtcbiAgLnBvc3QtcmlnaHQgaW1nICB7XG4gICAgbWF4LXdpZHRoOiAxNDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLnBvc3QtcmlnaHQgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIGFuZCAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAucG9zdC1yaWdodCBpbWcge1xuICAgIG1heC13aWR0aDogMTAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAucG9zdC1yaWdodCBpbWcge1xuICAgIG1heC13aWR0aDogNzBweDtcbiAgfVxufVxuXG4uZmluaXNoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRza3libHVlO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgKiB7XG4gICAgZm9udC1zaXplOiAwLjhyZW0gIWltcG9ydGFudDtcbiAgfVxuICAuY29udGVudCB7XG4gICAgbWF4LWhlaWdodDogNDBweDtcbiAgfVxufVxuXG4vKlxuLnBvc3QtY290ZW50IHtcbiAgcGFkZGluZzogNXB4O1xufVxuLnBvc3QtdGl0bGUsIC5wb3N0LWNvdGVudCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuKi9cbiJdfQ== */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { PostService } from 'src/app/shared/post.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Post } from 'src/app/shared/post.model';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Nav } from '../../nav/nav.model';\nimport { LikeHateService } from 'src/app/shared/like-hate.service';\nimport { CatergoryService } from '../catergory.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-catergory-newly',\n  templateUrl: './catergory-newly.component.html',\n  styleUrls: ['./catergory-newly.component.css']\n})\nexport class CatergoryNewlyComponent implements OnInit, OnDestroy {\n  pages: number;\n  isLoding: boolean;\n  isFinish: boolean = false;\n  votes: number;\n  voteUpColor = 'black';\n  voteDownColor = 'black';\n\n  catergory: any;\n  catergoryName: string;\n\n  posts: Post[] = [];\n  private scrollDownEvent: Subscription;\n  private postsChangedEvent: Subscription;\n\n  constructor(private postsService: PostService, private route: ActivatedRoute,\n    private authService: AuthService, private likeHateService: LikeHateService, private catergoryService: CatergoryService) { }\n\n  ngOnInit() {\n    const nav = new Nav();\n    this.pages = 1;\n\n    this.postsChangedEvent = this.catergoryService.postsChanged.subscribe((postData) => {\n      this.isLoding = false;\n\n      if (postData.change === true) { // 처음부터 리셋\n        this.pages = postData.pages;\n        this.posts = postData.posts;\n        this.isFinish = false;\n\n        window.scrollTo(0, 0);\n      } else { // 그전꺼 불러오기\n        this.pages = postData.pages;\n        this.posts = postData.posts;\n\n        if (postData.finish === true) {\n          this.isFinish = true;\n        }\n      }\n    });\n\n    // url이 바뀔때마다 처리 -> 카테고리 정보를 얻어옴\n    this.route.params.subscribe((params: Params) => {\n      this.catergoryName = params.postId; // 현경로\n\n      this.catergory = nav.catergory.filter((catergory) => {\n        return catergory.fileNav === this.catergoryName;\n      });\n\n      this.isLoding = true;\n      this.isFinish = false;\n\n      // 해당 카테고리에 맞는 포스트를 요청\n      this.catergoryService.getPosts(this.catergoryName, this.pages, params.postId);\n    });\n\n    // scrollDownEvnet발생시...\n    this.scrollDownEvent = this.catergoryService.onScrollDownEvent.subscribe(() => {\n      this.isLoding = true;\n      this.pages++;\n\n      this.catergoryService.getPosts(this.catergoryName, this.pages);\n    });\n\n\n  }\n\n  // 공감수 +1 증가\n  increase(postNo: string) {\n    // 공감수는 그냥 누르자마다 표면상 1증가시키면 되는거고,\n    // 뒷처리는 해줘야지. (로그인 여부도 확인하고))\n    if (!this.authService.getIsAuth()) {\n      alert('login ahead!!');\n      return;\n    }\n    // 내가 눌렀는지 여부도 판단해야하는데...? 하하하하하...ㅡㅡ\n\n    this.posts.forEach(post => {\n      if (post.post_no === Number(postNo)) {\n        post.likes++;\n      }\n    });\n    this.voteUpColor = 'lightblue';\n    this.voteDownColor = 'black';\n\n    this.likeHateService.setLikeCount(postNo, this.authService.getUserData().userNickname, 1);\n  }\n  // 공감수 -1 감소\n  decrease(postNo: string) {\n    if (!this.authService.getIsAuth()) {\n      alert('login ahead!!');\n      return;\n    }\n    this.posts.forEach(post => {\n      if (post.post_no === Number(postNo)) {\n        post.likes--;\n      }\n    });\n    this.voteUpColor = 'black';\n    this.voteDownColor = 'lightblue';\n    this.likeHateService.setLikeCount(postNo, this.authService.getUserData().userNickname, -1);\n  }\n\n  ngOnDestroy() {\n    this.scrollDownEvent.unsubscribe();\n    this.postsChangedEvent.unsubscribe();\n  }\n}\n","module.exports = \".description {\\n  margin-top: 60px;\\n  margin-bottom: 10px;\\n  width: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n.clearfix:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.post-hash {\\n  flex-basis: 80%;\\n}\\n.space {\\n  flex-basis: 7%;\\n}\\n.post-button {\\n  flex-basis: 13%;\\n}\\n.mat-card {\\n  height: 100%;\\n}\\n.hot-post {\\n  border: 1px solid rgba(0,0,0, 0.3);\\n  box-shadow: 0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12);\\n}\\n@media (max-width: 580px) {\\n  .description  {\\n    margin-top:0px;\\n  }\\n  * {\\n    font-size: 0.8rem !important;\\n  }\\n}\\n.hot-post > .hot-post-title {\\n  background-color: rgba(0,0,0, .03);\\n  padding: 10px;\\n  font-family: 'Anton', sans-serif;\\n}\\n.host-post > .hot-post-content {\\n  padding: 20px;\\n}\\n.mat-card {\\n  padding: 13px;\\n}\\n.mat-card-avatar {\\n  height: 40px;\\n  width: 40px;\\n  border-radius: 50%;\\n  flex-shrink: 0;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n.mat-card-avatar img {\\n  width: 100%;\\n  height: 100%;\\n}\\n.mat-card-header-text {\\n  margin: 0px !important;\\n}\\n.mat-card-title a {\\n  font-size: 1.1rem;\\n  font-family: 'Bree Serif', serif;\\n  color: black;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  min-height: 52px;\\n}\\n.mat-card-body {\\n  height: 200px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n.mat-card img {\\n  width: auto; height: auto;\\n  max-width: 327px;\\n  max-height: 180px;\\n  margin: 0 !important;\\n  vertical-align: middle;\\n}\\n@media (min-width: 1200px) and (max-width: 1400px) {\\n  .mat-card img {\\n    max-width: 250px;\\n  }\\n}\\n@media (min-width: 992px) and (max-width: 1199.98px) {\\n  .mat-card img {\\n    max-width: 150px;\\n  }\\n}\\n@media (min-width: 768px) and (max-width: 991.98px) {\\n  .mat-card img {\\n    max-width: 200px;\\n  }\\n}\\n@media (min-width: 576px) and (max-width: 767.98px) {\\n  .mat-card img {\\n    max-width: 200px;\\n  }\\n}\\n@media (max-width: 400px) {\\n  .mat-card img {\\n    max-width: 250px;\\n  }\\n}\\nmat-card-content p {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.banner {\\n  margin: 20px 0;\\n  max-height: 150px;\\n  width: 100%;\\n  cursor: pointer;\\n}\\n/*\\n  text-overflow: ellipsis (상자 테두리에 닿게 되면 오버플로우 된 문자들을 ... 으로 바꾼다.)\\n\\n  대신 조건이 필요하다.\\n  1) display: block일것\\n  2) 고정된 width, height값이 있을것.\\n  3) white-space:nowrap일것\\n  4) oveflow:hidden일것\\n\\n  대신 이건 한줄일때만 가능해짐...\\n\\n  여러줄의 경우일때 : https://stackoverflow.com/questions/15909489/text-overflow-ellipsis-on-two-lines\\n  드디어 성공함.\\n*/\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9jYXRlcmdvcnkvcG9wdWxhci1wb3N0L2NhdGVyZ29yeS1wb3B1bGFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxvQkFBYTtFQUFiLGFBQWE7QUFDZjtBQUNBO0VBQ0UsV0FBVztFQUNYLGNBQWM7RUFDZCxXQUFXO0FBQ2I7QUFDQTtFQUNFLGVBQWU7QUFDakI7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGVBQWU7QUFDakI7QUFFQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0Usa0NBQWtDO0VBQ2xDLDZEQUE2RDtBQUMvRDtBQUNBO0VBQ0U7SUFDRSxjQUFjO0VBQ2hCO0VBQ0E7SUFDRSw0QkFBNEI7RUFDOUI7QUFDRjtBQUNBO0VBQ0Usa0NBQWtDO0VBQ2xDLGFBQWE7RUFDYixnQ0FBZ0M7QUFDbEM7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2Qsb0JBQWlCO0tBQWpCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVcsRUFBRSxZQUFZO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0Usb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQiw0QkFBNEI7RUFDNUIsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixXQUFXO0VBQ1gsZUFBZTtBQUNqQjtBQUNBOzs7Ozs7Ozs7Ozs7O0NBYUMiLCJmaWxlIjoic3JjL2FwcC9ib2R5L2NhdGVyZ29yeS9wb3B1bGFyLXBvc3QvY2F0ZXJnb3J5LXBvcHVsYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi10b3A6IDYwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xufVxuLnBvc3QtaGFzaCB7XG4gIGZsZXgtYmFzaXM6IDgwJTtcbn1cbi5zcGFjZSB7XG4gIGZsZXgtYmFzaXM6IDclO1xufVxuLnBvc3QtYnV0dG9uIHtcbiAgZmxleC1iYXNpczogMTMlO1xufVxuXG4ubWF0LWNhcmQge1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uaG90LXBvc3Qge1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLCAwLjMpO1xuICBib3gtc2hhZG93OiAwIDJweCAycHggcmdiYSgwLDAsMCwuMjQpLDAgMCAycHggcmdiYSgwLDAsMCwuMTIpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIC5kZXNjcmlwdGlvbiAge1xuICAgIG1hcmdpbi10b3A6MHB4O1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC44cmVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5ob3QtcG9zdCA+IC5ob3QtcG9zdC10aXRsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsIC4wMyk7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGZvbnQtZmFtaWx5OiAnQW50b24nLCBzYW5zLXNlcmlmO1xufVxuLmhvc3QtcG9zdCA+IC5ob3QtcG9zdC1jb250ZW50IHtcbiAgcGFkZGluZzogMjBweDtcbn1cbi5tYXQtY2FyZCB7XG4gIHBhZGRpbmc6IDEzcHg7XG59XG4ubWF0LWNhcmQtYXZhdGFyIHtcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBmbGV4LXNocmluazogMDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG4ubWF0LWNhcmQtYXZhdGFyIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG4ubWF0LWNhcmQtdGl0bGUgYSB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcbiAgY29sb3I6IGJsYWNrO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgbWluLWhlaWdodDogNTJweDtcbn1cbi5tYXQtY2FyZC1ib2R5IHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLm1hdC1jYXJkIGltZyB7XG4gIHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMzI3cHg7XG4gIG1heC1oZWlnaHQ6IDE4MHB4O1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgLm1hdC1jYXJkIGltZyB7XG4gICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSBhbmQgKG1heC13aWR0aDogMTE5OS45OHB4KSB7XG4gIC5tYXQtY2FyZCBpbWcge1xuICAgIG1heC13aWR0aDogMTUwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDk5MS45OHB4KSB7XG4gIC5tYXQtY2FyZCBpbWcge1xuICAgIG1heC13aWR0aDogMjAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkgYW5kIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5tYXQtY2FyZCBpbWcge1xuICAgIG1heC13aWR0aDogMjAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAubWF0LWNhcmQgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICB9XG59XG5tYXQtY2FyZC1jb250ZW50IHAge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLmJhbm5lciB7XG4gIG1hcmdpbjogMjBweCAwO1xuICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi8qXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzICjsg4HsnpAg7YWM65GQ66as7JeQIOuLv+qyjCDrkJjrqbQg7Jik67KE7ZSM66Gc7JqwIOuQnCDrrLjsnpDrk6TsnYQgLi4uIOycvOuhnCDrsJTqvrzri6QuKVxuXG4gIOuMgOyLoCDsobDqsbTsnbQg7ZWE7JqU7ZWY64ukLlxuICAxKSBkaXNwbGF5OiBibG9ja+ydvOqyg1xuICAyKSDqs6DsoJXrkJwgd2lkdGgsIGhlaWdodOqwkuydtCDsnojsnYTqsoMuXG4gIDMpIHdoaXRlLXNwYWNlOm5vd3JhcOydvOqyg1xuICA0KSBvdmVmbG93OmhpZGRlbuydvOqyg1xuXG4gIOuMgOyLoCDsnbTqsbQg7ZWc7KSE7J2865WM66eMIOqwgOuKpe2VtOynkC4uLlxuXG4gIOyXrOufrOykhOydmCDqsr3smrDsnbzrlYwgOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNTkwOTQ4OS90ZXh0LW92ZXJmbG93LWVsbGlwc2lzLW9uLXR3by1saW5lc1xuICDrk5zrlJTslrQg7ISx6rO17ZWoLlxuKi9cblxuXG4iXX0= */\"","import { OnInit, OnDestroy, Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Post } from 'src/app/shared/post.model';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PostService } from 'src/app/shared/post.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Nav } from '../../nav/nav.model';\n\n@Component({\n  selector: 'app-catergory-popular',\n  templateUrl: './catergory-popular.component.html',\n  styleUrls: ['./catergory-popular.component.css']\n})\nexport class CatergoryPopularComponent implements OnInit, OnDestroy {\n  private popularPostSub: Subscription;\n  catergoryName: string;\n  catergory: any;\n  popularPost: Post[];\n  isAuth: boolean;\n\n  constructor(private route: ActivatedRoute, private postService: PostService, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.isAuth = this.authService.getIsAuth();\n    const nav = new Nav();\n\n    // 현재 카테고리를 url를 통해 알아내는 코드\n    this.route.params.subscribe((param: Params) => {\n      this.catergoryName = param.postId;\n      this.catergory = nav.catergory.filter((catergory) => {\n        return catergory.fileNav === this.catergoryName;\n      });\n\n      this.postService.getPopularPosts(this.catergoryName); // 알아낸 카테고리를 통해 이 카테고리에 인기글을 요청\n    });\n\n    // 이 카테고리에 인기글을 요청한 결과\n    this.popularPostSub = this.postService.popularPostUpdated\n      .subscribe((posts) => {\n        this.popularPost = posts;\n        this.popularPost.forEach((post) => {\n          post.content = post.content.replace(/(<([^>]+)>)/ig, \"\");\n        });\n      });\n  }\n\n  ngOnDestroy() {\n    this.popularPostSub.unsubscribe();\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { HomeComponent } from './home.component';\nimport { NewPostComponent } from './new-post/new-post.component';\nimport { PopularPostComponent } from './popular-post/popular-post.component';\nimport { CommonModule } from '@angular/common';\nimport { BodyRoutingModule } from '../body-routing.module';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    NewPostComponent,\n    PopularPostComponent\n  ],\n  imports: [\n    CommonModule,\n    BodyRoutingModule\n  ]\n})\nexport class HomeModule {}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from 'src/app/shared/post.model';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainPostService {\n\n  constructor(private http: HttpClient) {}\n\n  // 인기 게시글 조회\n  getPopularPosts() {\n    return this.http.get<{posts: Post[]}>(BACKED_URL + '/post/main-popular');\n  }\n\n  // 최신 게시글 조회\n  getNewlyPosts() {\n    return this.http.get<{posts: Post[]}>(BACKED_URL + '/post/main-newly');\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  background-color: lightgray;\\n  padding: 20px;\\n  min-height: 400px;\\n}\\n.mat-headline {\\n  font-family: 'Anton', sans-serif;\\n  margin: 0;\\n}\\n.catergory {\\n  font-family: Georgia;\\n  margin: 10px 0 20px 0;\\n  text-align: center;\\n  background-color: #E5E8E8;\\n  border-radius: 10px / 10px;\\n  padding: 10px 0;\\n}\\n.newly-post-content:hover {\\n  cursor: pointer;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n.post-title {\\n  font-size: 1.1rem;\\n  font-family: 'Bree Serif', serif;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  min-height: 42px;\\n}\\n.post-content {\\n  font-size: 1rem;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 6;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n@media (max-width: 580px) {\\n  * {\\n    font-size: 0.95rem !important;\\n  }\\n  .card-text {\\n    min-height: 40px;\\n  }\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9ob21lL25ldy1wb3N0L25ldy1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsMkJBQTJCO0VBQzNCLGFBQWE7RUFDYixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGdDQUFnQztFQUNoQyxTQUFTO0FBQ1g7QUFDQTtFQUNFLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QiwwQkFBMEI7RUFDMUIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLDRFQUE0RTtBQUM5RTtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdDQUFnQztFQUNoQyxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsNEJBQTRCO0VBQzVCLGdCQUFnQjtFQUNoQix1QkFBdUI7QUFDekI7QUFFQTtFQUNFO0lBQ0UsNkJBQTZCO0VBQy9CO0VBQ0E7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvaG9tZS9uZXctcG9zdC9uZXctcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICBwYWRkaW5nOiAyMHB4O1xuICBtaW4taGVpZ2h0OiA0MDBweDtcbn1cbi5tYXQtaGVhZGxpbmUge1xuICBmb250LWZhbWlseTogJ0FudG9uJywgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xufVxuLmNhdGVyZ29yeSB7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhO1xuICBtYXJnaW46IDEwcHggMCAyMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U1RThFODtcbiAgYm9yZGVyLXJhZGl1czogMTBweCAvIDEwcHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbi5uZXdseS1wb3N0LWNvbnRlbnQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XG59XG4ucG9zdC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIG1pbi1oZWlnaHQ6IDQycHg7XG59XG4ucG9zdC1jb250ZW50IHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiA2O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC45NXJlbSAhaW1wb3J0YW50O1xuICB9XG4gIC5jYXJkLXRleHQge1xuICAgIG1pbi1oZWlnaHQ6IDQwcHg7XG4gIH1cbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/shared/post.model';\nimport { MainPostService } from '../main-post.service';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css']\n})\nexport class NewPostComponent implements OnInit{\n  newlyPost: Post[];\n  constructor(private mainPostService: MainPostService) {}\n\n  ngOnInit() {\n    this.mainPostService.getNewlyPosts()\n      .subscribe((postData) => {\n        this.newlyPost = postData.posts;\n\n        this.newlyPost.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n        });\n      });\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  padding: 20px;\\n  margin-top:40px;\\n  min-height: 400px;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n  }\\n}\\n.mat-headline h3 {\\n font-family: 'Anton', sans-serif;\\n}\\n.post-catergory {\\n  width: 100%;\\n  background-color: #FF9000;\\n  border-radius: 25px / 25px;\\n  padding: 10px 0;\\n}\\n.popular-post {\\n  margin-bottom: 30px;\\n  font-size: 1.2rem;\\n}\\n.catergory {\\n  font-family: Georgia;\\n  margin: 0;\\n  text-align: center;\\n}\\n.hot-post-image {\\n  height: 150px;\\n  text-align: center;\\n}\\n.hot-post-image img {\\n  width: auto; height: auto;\\n  max-width: 100%;\\n  max-height: 150px;\\n  margin: 0 !important;\\n  padding: 1.25rem 0;\\n}\\n.hot-post-content:hover {\\n  cursor: pointer;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n.card-title {\\n  font-size: 1.1rem;\\n  font-family: 'Bree Serif', serif;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.card-text {\\n  font-size: 1rem;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  min-height: 48px;\\n}\\n.banner {\\n  margin: 20px 0;\\n  max-height: 150px;\\n  width: 100%;\\n  cursor: pointer;\\n}\\n@media (max-width: 580px) {\\n  * {\\n    font-size: 0.85rem !important;\\n  }\\n  .card-text {\\n    min-height: 40px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9ob21lL3BvcHVsYXItcG9zdC9wb3B1bGFyLXBvc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0U7SUFDRSxjQUFjO0VBQ2hCO0FBQ0Y7QUFDQTtDQUNDLGdDQUFnQztBQUNqQztBQUNBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6QiwwQkFBMEI7RUFDMUIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0Usb0JBQW9CO0VBQ3BCLFNBQVM7RUFDVCxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVcsRUFBRSxZQUFZO0VBQ3pCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsZUFBZTtFQUNmLDRFQUE0RTtBQUM5RTtBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdDQUFnQztFQUNoQyxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxlQUFlO0VBQ2Ysb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQiw0QkFBNEI7RUFDNUIsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtFQUN2QixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsV0FBVztFQUNYLGVBQWU7QUFDakI7QUFDQTtFQUNFO0lBQ0UsNkJBQTZCO0VBQy9CO0VBQ0E7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvaG9tZS9wb3B1bGFyLXBvc3QvcG9wdWxhci1wb3N0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tdG9wOjQwcHg7XG4gIG1pbi1oZWlnaHQ6IDQwMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBtYXJnaW4tdG9wOjBweDtcbiAgfVxufVxuLm1hdC1oZWFkbGluZSBoMyB7XG4gZm9udC1mYW1pbHk6ICdBbnRvbicsIHNhbnMtc2VyaWY7XG59XG4ucG9zdC1jYXRlcmdvcnkge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOTAwMDtcbiAgYm9yZGVyLXJhZGl1czogMjVweCAvIDI1cHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbi5wb3B1bGFyLXBvc3Qge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cbi5jYXRlcmdvcnkge1xuICBmb250LWZhbWlseTogR2VvcmdpYTtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uaG90LXBvc3QtaW1hZ2Uge1xuICBoZWlnaHQ6IDE1MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uaG90LXBvc3QtaW1hZ2UgaW1nIHtcbiAgd2lkdGg6IGF1dG87IGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMDtcbn1cblxuLmhvdC1wb3N0LWNvbnRlbnQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XG59XG5cbi5jYXJkLXRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIGZvbnQtZmFtaWx5OiAnQnJlZSBTZXJpZicsIHNlcmlmO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cbi5jYXJkLXRleHQge1xuICBmb250LXNpemU6IDFyZW07XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBtaW4taGVpZ2h0OiA0OHB4O1xufVxuLmJhbm5lciB7XG4gIG1hcmdpbjogMjBweCAwO1xuICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1ODBweCkge1xuICAqIHtcbiAgICBmb250LXNpemU6IDAuODVyZW0gIWltcG9ydGFudDtcbiAgfVxuICAuY2FyZC10ZXh0IHtcbiAgICBtaW4taGVpZ2h0OiA0MHB4O1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MainPostService } from '../main-post.service';\nimport { Post } from 'src/app/shared/post.model';\n\n@Component({\n  selector: 'app-popular-post',\n  templateUrl: './popular-post.component.html',\n  styleUrls: ['./popular-post.component.css']\n})\nexport class PopularPostComponent implements OnInit{\n  popularPost: Post[];\n  constructor(private mainPostService: MainPostService) {}\n\n  ngOnInit() {\n    this.mainPostService.getPopularPosts()\n      .subscribe((postData) => {\n        this.popularPost = postData.posts;\n\n        this.popularPost.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n        });\n      });\n  }\n\n}\n","module.exports = \":host {\\n  display: block;\\n  position: fixed;\\n  top: 80px;\\n  width: 12%;\\n}\\n@media (min-width: 768px) and (max-width: 1199.98px) {\\n  :host {\\n    width: 14%;\\n    font-size: 0.9rem;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host {\\n    position: static;\\n    width: 100%;\\n    margin-top: 64px;\\n  }\\n}\\n.nav-subtitle {\\n  padding-top: 20px;\\n}\\n.nav-item {\\n  width: 100%;\\n}\\nul > li {\\n  padding: 0.5rem 1rem;\\n  display: -webkit-box;\\n  display: flex;\\n}\\nul > li:hover,\\nul > li > a:active {\\n  background-color: #ffe3e3;\\n  border-radius: 25px / 25px;\\n  cursor: pointer;\\n  opacity: 1;\\n}\\n.nav-icon {\\n  flex-basis: 10%;\\n  display: inline-block;\\n  line-height: 40px;\\n}\\n.nav-icon i {\\n  font-size: 1.2rem;\\n}\\n.nav-link {\\n  display: inline-block;\\n  text-decoration: none;\\n  color: black;\\n  height: 100%;\\n  font-weight: bold;\\n  flex-basis: 90%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9uYXYvbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLFNBQVM7RUFDVCxVQUFVO0FBQ1o7QUFDQTtFQUNFO0lBQ0UsVUFBVTtJQUNWLGlCQUFpQjtFQUNuQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsZ0JBQWdCO0VBQ2xCO0FBQ0Y7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUVBO0VBQ0UsV0FBVztBQUNiO0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFFQTs7RUFFRSx5QkFBeUI7RUFDekIsMEJBQTBCO0VBQzFCLGVBQWU7RUFDZixVQUFVO0FBQ1o7QUFFQTtFQUNFLGVBQWU7RUFDZixxQkFBcUI7RUFDckIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvbmF2L25hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDgwcHg7XG4gIHdpZHRoOiAxMiU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMTk5Ljk4cHgpIHtcbiAgOmhvc3Qge1xuICAgIHdpZHRoOiAxNCU7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICA6aG9zdCB7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiA2NHB4O1xuICB9XG59XG4ubmF2LXN1YnRpdGxlIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG5cbi5uYXYtaXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG51bCA+IGxpIHtcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbnVsID4gbGk6aG92ZXIsXG51bCA+IGxpID4gYTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlM2UzO1xuICBib3JkZXItcmFkaXVzOiAyNXB4IC8gMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubmF2LWljb24ge1xuICBmbGV4LWJhc2lzOiAxMCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG4ubmF2LWljb24gaSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuLm5hdi1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZmxleC1iYXNpczogOTAlO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Nav } from './nav.model';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  catergory: any;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    const nav = new Nav();\n    this.catergory = nav.catergory;\n  }\n}\n","export class Nav {\n  catergory = [\n    {\n      name: \"Web\",\n      fileNav: \"Web\",\n    },\n    {\n      name: \"App\",\n      fileNav: \"App\",\n    },\n    {\n      name: \"Desktop\",\n      fileNav: \"Desktop\",\n    },\n    {\n      name: \"AI\",\n      fileNav: \"AI\",\n    },\n    {\n      name: \"Games\",\n      fileNav: \"Games\",\n    },\n  ];\n}\n","module.exports = \":host {\\n  display: block;\\n  padding: 20px;\\n  height: 100%;\\n  margin-top:100px;\\n}\\n.search {\\n  height: 100px;\\n}\\n.post-cotent {\\n  width:100%;\\n  display:-webkit-box;\\n  display:flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  flex-wrap: nowrap;\\n}\\n.post-left, .post-center, .post-right {\\n  /*border: 1px solid black;*/\\n  height:100px;\\n  flex-shrink: 0;\\n}\\n/*포스트 left*/\\n.post-left {\\n  text-align:center;\\n  flex-basis: 10%;\\n  background-color: #ddddddd0;\\n}\\n.post-left button {\\n  padding: 0;\\n  border: none;\\n  outline: none;\\n  background: none;\\n  box-shadow: none;\\n}\\n.votes {\\n  font-size: 1.2rem;\\n}\\n/*포스트 center*/\\n.post-center {\\n  flex-basis: 20%;\\n  text-align: center;\\n  line-height: 100px;\\n  height: 100%;\\n  /*border: 1px solid black;*/\\n}\\n.post-center img {\\n  width: auto; height: auto;\\n  max-width: 206px;\\n  max-height: 100px;\\n  margin: 0 !important;\\n}\\n@media (min-width: 992px) and (max-width: 1199.98px) {\\n  .post-center img  {\\n    max-width: 140px;\\n  }\\n}\\n@media (min-width: 768px) and (max-width: 991.98px) {\\n  .post-center img {\\n    max-width: 100px;\\n  }\\n}\\n@media (min-width: 576px) and (max-width: 767.98px) {\\n  .post-center img {\\n    max-width: 100px;\\n  }\\n}\\n@media (max-width: 576px) {\\n  .post-center img {\\n    max-width: 70px;\\n  }\\n}\\n.post-right {\\n  flex-basis: 70%;\\n  flex-shrink: 1;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.title {\\n  font-size: 1.2rem;\\n  font-family: 'Bree Serif', serif;\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n.title a div{\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  display: block;\\n  color: black;\\n}\\n.content {\\n  font-family: 'PT Sans', sans-serif;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  color: #777;\\n  padding: 5px;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n    padding: 0;\\n  }\\n  * {\\n    font-size: 0.85rem !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsYUFBYTtFQUNiLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsVUFBVTtFQUNWLG1CQUFZO0VBQVosWUFBWTtFQUNaLDhCQUFtQjtFQUFuQiw2QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsMkJBQTJCO0VBQzNCLFlBQVk7RUFDWixjQUFjO0FBQ2hCO0FBQ0EsV0FBVztBQUNYO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZiwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBLGFBQWE7QUFDYjtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWiwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLFdBQVcsRUFBRSxZQUFZO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjtBQUVBO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGNBQWM7RUFDZCxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGtDQUFrQztFQUNsQyxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFDQTtFQUNFO0lBQ0UsY0FBYztJQUNkLFVBQVU7RUFDWjtFQUNBO0lBQ0UsNkJBQTZCO0VBQy9CO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9ib2R5L3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLXRvcDoxMDBweDtcbn1cbi5zZWFyY2gge1xuICBoZWlnaHQ6IDEwMHB4O1xufVxuLnBvc3QtY290ZW50IHtcbiAgd2lkdGg6MTAwJTtcbiAgZGlzcGxheTpmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbn1cbi5wb3N0LWxlZnQsIC5wb3N0LWNlbnRlciwgLnBvc3QtcmlnaHQge1xuICAvKmJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyovXG4gIGhlaWdodDoxMDBweDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG4vKu2PrOyKpO2KuCBsZWZ0Ki9cbi5wb3N0LWxlZnQge1xuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgZmxleC1iYXNpczogMTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkZDA7XG59XG4ucG9zdC1sZWZ0IGJ1dHRvbiB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi52b3RlcyB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuLyrtj6zsiqTtirggY2VudGVyKi9cbi5wb3N0LWNlbnRlciB7XG4gIGZsZXgtYmFzaXM6IDIwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMTAwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgLypib3JkZXI6IDFweCBzb2xpZCBibGFjazsqL1xufVxuLnBvc3QtY2VudGVyIGltZyB7XG4gIHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMjA2cHg7XG4gIG1heC1oZWlnaHQ6IDEwMHB4O1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkgYW5kIChtYXgtd2lkdGg6IDExOTkuOThweCkge1xuICAucG9zdC1jZW50ZXIgaW1nICB7XG4gICAgbWF4LXdpZHRoOiAxNDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLnBvc3QtY2VudGVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSBhbmQgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLnBvc3QtY2VudGVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3N0LWNlbnRlciBpbWcge1xuICAgIG1heC13aWR0aDogNzBweDtcbiAgfVxufVxuXG4ucG9zdC1yaWdodCB7XG4gIGZsZXgtYmFzaXM6IDcwJTtcbiAgZmxleC1zaHJpbms6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcbiAgcGFkZGluZzogNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi50aXRsZSBhIGRpdntcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogYmxhY2s7XG59XG4uY29udGVudCB7XG4gIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBjb2xvcjogIzc3NztcbiAgcGFkZGluZzogNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBtYXJnaW4tdG9wOjBweDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC44NXJlbSAhaW1wb3J0YW50O1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PostService } from 'src/app/shared/post.service';\nimport { Post } from 'src/app/shared/post.model';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  pages: number;\n  searchInput: string;\n  posts: Post[] = [];\n  isLoding: boolean;\n  isFinish: boolean = false;\n\n  constructor(private activatedRoute: ActivatedRoute, private postsService: PostService) {\n\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.posts = [];\n      this.pages = 1;\n      this.isLoding = this.isFinish = false;\n\n      this.searchInput = params['searchInput'];\n\n      this.postsService.getSearchPost(this.searchInput, this.pages)\n      .subscribe((searchPost) => { // 방송국이라고 보면 됨.\n        this.isLoding = false;\n        this.posts = this.posts.concat(searchPost.posts);\n\n        this.posts.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n/*\n          const rgxp = new RegExp(this.searchInput, 'g');\n          const repl = '<span class=\"marker\">' + this.searchInput + '</span>';\n          post.title = post.title.replace(this.searchInput, repl);\n*/\n          post.title = post.title.replace(new RegExp(this.searchInput, \"gi\"), match => {\n            return '<span class=\"marker\">' + match + '</span>';\n          });\n          post.curtContent = post.curtContent.replace(new RegExp(this.searchInput, \"gi\"), match => {\n            return '<span class=\"marker\">' + match + '</span>';\n          });\n        });\n\n      });\n    });\n  }\n\n  onScrollDown() {\n    this.isLoding = true;\n    this.pages++;\n    this.postsService.getSearchPost(this.searchInput, this.pages)\n      .subscribe((searchPost) => { // 방송국이라고 보면 됨.\n        if (searchPost.posts.length === 0) {\n          this.isFinish = true;\n        }\n        this.isLoding = false;\n        this.posts = this.posts.concat(searchPost.posts);\n\n        this.posts.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n/*\n          const rgxp = new RegExp(this.searchInput, 'g');\n          const repl = '<span class=\"marker\">' + this.searchInput + '</span>';\n          post.title = post.title.replace(this.searchInput, repl);\n*/\n          post.title = post.title.replace(new RegExp(this.searchInput, \"gi\"), match => {\n            return '<span class=\"marker\">' + match + '</span>';\n          });\n          post.curtContent = post.curtContent.replace(new RegExp(this.searchInput, \"gi\"), match => {\n            return '<span class=\"marker\">' + match + '</span>';\n          });\n        });\n      });\n  }\n}\n","module.exports = \"h4 {\\n  background-color: #FF9000;\\n  color: white;\\n  height: 40px;\\n  line-height: 40px;\\n  width:20%;\\n  text-align: center;\\n}\\n.post-cotent {\\n  width:100%;\\n  display:-webkit-box;\\n  display:flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  flex-wrap: nowrap;\\n}\\n.post-left, .post-center, .post-right {\\n  /*border: 1px solid black;*/\\n  height:100px;\\n  flex-shrink: 0;\\n}\\n/*포스트 left*/\\n.post-left {\\n  text-align:center;\\n  flex-basis: 10%;\\n  background-color: #ddddddd0;\\n}\\n.post-left button {\\n  padding: 0;\\n  border: none;\\n  outline: none;\\n  background: none;\\n  box-shadow: none;\\n}\\n.votes {\\n  font-size: 1.2rem;\\n}\\n/*포스트 center*/\\n.post-center {\\n  flex-basis: 20%;\\n  text-align: center;\\n  line-height: 100px;\\n  height: 100%;\\n  /*border: 1px solid black;*/\\n}\\n.post-center img {\\n  width: auto; height: auto;\\n  max-width: 206px;\\n  max-height: 100px;\\n  margin: 0 !important;\\n}\\n@media (min-width: 992px) and (max-width: 1199.98px) {\\n  .post-center img  {\\n    max-width: 140px;\\n  }\\n}\\n@media (min-width: 768px) and (max-width: 991.98px) {\\n  .post-center img {\\n    max-width: 100px;\\n  }\\n}\\n@media (min-width: 576px) and (max-width: 767.98px) {\\n  .post-center img {\\n    max-width: 100px;\\n  }\\n}\\n@media (max-width: 576px) {\\n  .post-center img {\\n    max-width: 70px;\\n  }\\n}\\n.post-right {\\n  flex-basis: 70%;\\n  flex-shrink: 1;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.title {\\n  font-size: 1.2rem;\\n  font-family: 'Bree Serif', serif;\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n.title a div{\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  display: block;\\n  color: black;\\n}\\n.content {\\n  font-family: 'PT Sans', sans-serif;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  color: #777;\\n  padding: 5px;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    padding: 0;\\n  }\\n  * {\\n    font-size: 0.85rem !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS91c2VyL3Bvc3QvdXNlci1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsU0FBUztFQUNULGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLG1CQUFZO0VBQVosWUFBWTtFQUNaLDhCQUFtQjtFQUFuQiw2QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsMkJBQTJCO0VBQzNCLFlBQVk7RUFDWixjQUFjO0FBQ2hCO0FBQ0EsV0FBVztBQUNYO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZiwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBLGFBQWE7QUFDYjtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWiwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLFdBQVcsRUFBRSxZQUFZO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjtBQUVBO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGNBQWM7RUFDZCxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGtDQUFrQztFQUNsQyxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFDQTtFQUNFO0lBQ0UsVUFBVTtFQUNaO0VBQ0E7SUFDRSw2QkFBNkI7RUFDL0I7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvdXNlci9wb3N0L3VzZXItcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY5MDAwO1xuICBjb2xvcjogd2hpdGU7XG4gIGhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOjIwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnBvc3QtY290ZW50IHtcbiAgd2lkdGg6MTAwJTtcbiAgZGlzcGxheTpmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbn1cbi5wb3N0LWxlZnQsIC5wb3N0LWNlbnRlciwgLnBvc3QtcmlnaHQge1xuICAvKmJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyovXG4gIGhlaWdodDoxMDBweDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG4vKu2PrOyKpO2KuCBsZWZ0Ki9cbi5wb3N0LWxlZnQge1xuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgZmxleC1iYXNpczogMTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkZDA7XG59XG4ucG9zdC1sZWZ0IGJ1dHRvbiB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi52b3RlcyB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuLyrtj6zsiqTtirggY2VudGVyKi9cbi5wb3N0LWNlbnRlciB7XG4gIGZsZXgtYmFzaXM6IDIwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMTAwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgLypib3JkZXI6IDFweCBzb2xpZCBibGFjazsqL1xufVxuLnBvc3QtY2VudGVyIGltZyB7XG4gIHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMjA2cHg7XG4gIG1heC1oZWlnaHQ6IDEwMHB4O1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkgYW5kIChtYXgtd2lkdGg6IDExOTkuOThweCkge1xuICAucG9zdC1jZW50ZXIgaW1nICB7XG4gICAgbWF4LXdpZHRoOiAxNDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLnBvc3QtY2VudGVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSBhbmQgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLnBvc3QtY2VudGVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3N0LWNlbnRlciBpbWcge1xuICAgIG1heC13aWR0aDogNzBweDtcbiAgfVxufVxuXG4ucG9zdC1yaWdodCB7XG4gIGZsZXgtYmFzaXM6IDcwJTtcbiAgZmxleC1zaHJpbms6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcbiAgcGFkZGluZzogNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi50aXRsZSBhIGRpdntcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogYmxhY2s7XG59XG4uY29udGVudCB7XG4gIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBjb2xvcjogIzc3NztcbiAgcGFkZGluZzogNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC44NXJlbSAhaW1wb3J0YW50O1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Post } from 'src/app/shared/post.model';\nimport { PostService } from 'src/app/shared/post.service';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.css']\n})\nexport class UserPostComponent implements OnInit {\n  pages: number;\n  posts: Post[] = [];\n  nickname: string;\n  isLoding: boolean;\n  isFinish: boolean = false;\n\n  constructor(private authService: AuthService, private postsService: PostService) {\n    this.nickname = this.authService.getUserData().userNickname;\n  }\n\n  ngOnInit() {\n    this.posts = [];\n    this.pages = 1;\n    this.isLoding = this.isFinish = false;\n    this.postsService.getMyPosts(this.nickname, this.pages)\n      .subscribe((myPost) => {\n        this.isLoding = false;\n        this.posts = this.posts.concat(myPost.posts);\n\n        this.posts.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n        });\n      });\n  }\n\n  onScrollDown() {\n    this.isLoding = true;\n    this.pages++;\n    this.postsService.getMyPosts(this.nickname, this.pages)\n      .subscribe((myPost) => { // 방송국이라고 보면 됨.\n        this.isLoding = false;\n        this.posts = this.posts.concat(myPost.posts);\n\n        this.posts.forEach((post) => {\n          post.curtContent = post.content.replace(/(<([^>]+)>)/ig, \"\");\n        });\n      });\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","module.exports = \".user-image {\\n  width: 80%;\\n  display: block;\\n  margin: 0 auto;\\n}\\n.user-image-h4 {\\n  width: 100%;\\n}\\n.user-image-content {\\n  margin-top: 5px;\\n  width: 100%;\\n  background-color: #adadad;\\n  height: 400px;\\n  padding: 10px;\\n}\\nh4 {\\n  background-color: #FF9000;\\n  color: white;\\n  height: 40px;\\n  line-height: 40px;\\n  width:30%;\\n  text-align: center;\\n}\\n.avatar {\\n  display: block;\\n  margin: 0 auto;\\n  width: auto; height: auto;\\n  max-width: 200px;\\n  max-height: 200px;\\n}\\n.user-image-content button {\\n  display: block;\\n  margin: 20px auto;\\n\\n}\\n.update {\\n  min-width: 200px;\\n  font-size: 1.2rem;\\n  background-color: #FF9000;\\n  border-color: #FF9000;\\n  color: white;\\n}\\n.button-div {\\n  width: 100%;\\n  margin-top: 50px;\\n  text-align: center;\\n}\\ninput[type=\\\"file\\\"] {\\n  display: none;\\n}\\n@media (max-width: 580px) {\\n  * {\\n    font-size: 0.85rem !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS91c2VyL3NldHRpbmcvdXNlci1zZXR0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsY0FBYztFQUNkLGNBQWM7QUFDaEI7QUFDQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLGFBQWE7QUFDZjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxjQUFjO0VBQ2QsV0FBVyxFQUFFLFlBQVk7RUFDekIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjs7QUFFbkI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixZQUFZO0FBQ2Q7QUFDQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFO0lBQ0UsNkJBQTZCO0VBQy9CO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9ib2R5L3VzZXIvc2V0dGluZy91c2VyLXNldHRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLWltYWdlIHtcbiAgd2lkdGg6IDgwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLnVzZXItaW1hZ2UtaDQge1xuICB3aWR0aDogMTAwJTtcbn1cbi51c2VyLWltYWdlLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWRhZGFkO1xuICBoZWlnaHQ6IDQwMHB4O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuaDQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY5MDAwO1xuICBjb2xvcjogd2hpdGU7XG4gIGhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOjMwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmF2YXRhciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IGF1dG87IGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG59XG4udXNlci1pbWFnZS1jb250ZW50IGJ1dHRvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDIwcHggYXV0bztcblxufVxuLnVwZGF0ZSB7XG4gIG1pbi13aWR0aDogMjAwcHg7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY5MDAwO1xuICBib3JkZXItY29sb3I6ICNGRjkwMDA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5idXR0b24tZGl2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1ODBweCkge1xuICAqIHtcbiAgICBmb250LXNpemU6IDAuODVyZW0gIWltcG9ydGFudDtcbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PasswordValidator } from 'src/app/auth/signup/password-validator';\nimport { mimeType } from './mime-type.validator';\n\n@Component({\n  selector: 'app-user-setting',\n  templateUrl: './user-setting.component.html',\n  styleUrls: ['./user-setting.component.css']\n})\nexport class UserSettingComponent implements OnInit {\n  mode: string;\n  userData = {\n    email: '',\n    nickname: '',\n    firstname: '',\n    lastname: '',\n    avatar: '',\n    gender: ''\n  };\n  form: FormGroup;\n  imagePreview: string;\n  imageNew: boolean;\n\n  constructor(private authService: AuthService) {\n\n  }\n\n  ngOnInit() {\n    this.imageNew = false;\n    this.mode = 'select';\n    this.userData.email = this.authService.getUserData().userId;\n    this.userData.nickname = this.authService.getUserData().userNickname;\n\n    this.authService.getUserAccount()\n      .subscribe((userDate) => {\n        this.userData.firstname = userDate.first_name;\n        this.userData.lastname = userDate.last_name;\n        this.userData.avatar = userDate.avatar;\n        this.userData.gender = userDate.gender;\n      });\n  }\n\n  onUpdate() {\n    this.mode = 'update';\n\n    this.form = new FormGroup({\n      image: new FormControl(null, {validators: [Validators.required], asyncValidators : [mimeType]}),\n      passwordGroup: new FormGroup({\n        password: new FormControl(null, [Validators.required, Validators.pattern('(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}')]),\n        confirmPassword: new FormControl(null, Validators.required)\n      }, PasswordValidator.match),\n      nickName: new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z0-9]{3,20}')])\n    });\n\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      this.imagePreview = reader.result as string;\n    });\n    reader.readAsDataURL(file);\n\n    this.imageNew = true;\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.authService.setUserAccount(this.form.value.passwordGroup.password, this.form.value.image, this.form.value.nickName);\n\n    /*\n    this.authService.createUser(\n      this.signupForm.value.email,\n      this.signupForm.value.passwordGroup.password,\n      this.signupForm.value.firstName,\n      this.signupForm.value.lastName,\n      this.signupForm.value.nickName,\n      this.signupForm.value.gender\n    );\n    */\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  padding: 20px;\\n  height: 100%;\\n  margin-top:100px;\\n}\\n.tab {\\n  display: -webkit-box;\\n  display: flex;\\n}\\n.tab a {\\n  flex-basis: 50%;\\n  text-align: center;\\n  color: white;\\n  height: 50px;\\n  line-height: 50px;\\n  text-decoration: none;\\n  background-color: #a39f9f;\\n  font-size: 1.2rem;\\n}\\n.active {\\n  background-color: #FF9000 !important;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n  }\\n  * {\\n    font-size: 0.85rem !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS91c2VyL3VzZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFDQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWixpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLHlCQUF5QjtFQUN6QixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUVBO0VBQ0U7SUFDRSxjQUFjO0VBQ2hCO0VBQ0E7SUFDRSw2QkFBNkI7RUFDL0I7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2JvZHkvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAyMHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbi10b3A6MTAwcHg7XG59XG4udGFiIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi50YWIgYSB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogd2hpdGU7XG4gIGhlaWdodDogNTBweDtcbiAgbGluZS1oZWlnaHQ6IDUwcHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2EzOWY5ZjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59XG4uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOTAwMCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgOmhvc3Qge1xuICAgIG1hcmdpbi10b3A6MHB4O1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC44NXJlbSAhaW1wb3J0YW50O1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  kind: string;\n\n  constructor(private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((param: Params) => {\n      this.kind = param.kinds;\n\n    });\n  }\n}\n","// 서버에서 에러를 전달해주면 에러를 보여줘야지\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { MatDialog } from '@angular/material';\nimport { ErrorComponent } from './error/error.component';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialog: MatDialog) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"An unknown error occurred!\";\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        console.log(errorMessage);\n        // 에러 컴포넌트 호출 -> 에러컴포넌트는 에러다이어로그를 보여줌\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Inject, Component } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {\n    console.log(data.message);\n  }\n}\n","import {Injectable} from \"@angular/core\";\ndeclare var ga: Function;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleAnalyticsEventsService {\n\n  public emitEvent(eventCategory: string,\n                   eventAction: string,\n                   eventLabel: string = null,\n                   eventValue: number = null) {\n    ga('send', 'event', { eventCategory, eventLabel, eventAction, eventValue });\n  }\n}\n","module.exports = \".logo {\\n  max-width: 100%;\\n  max-height: 50px;\\n}\\n.header-left a {\\n  line-height: 60px;\\n}\\n@media (max-width: 800px) {\\n  mat-toolbar-row {\\n    padding: 0 1%;\\n  }\\n  .header-left {\\n    padding-right: 0;\\n  }\\n  .header-right {\\n    padding: 0;\\n  }\\n  .header-center {\\n    padding: 0;\\n  }\\n}\\n@media (max-width: 576px) {\\n  .example-toolbar a {\\n    line-height: 50px;\\n  }\\n  .logo {\\n    max-width: 80%;\\n    max-height: 50px;\\n  }\\n}\\n@media (min-width: 800px) and (max-width: 1200px) {\\n  mat-toolbar-row {\\n    padding: 0 3%;\\n  }\\n}\\n@media (min-width: 1200px) and (max-width: 1800px) {\\n  mat-toolbar-row {\\n    padding: 0 5%;\\n  }\\n}\\n@media (min-width: 1800px) {\\n  mat-toolbar-row {\\n    padding: 0 10%;\\n  }\\n}\\n.sbtn {\\n  width: 15%;\\n  padding: 0.375rem 1%;\\n}\\ninput {\\n  width: 60% !important;\\n  margin-right: 10px;\\n}\\n.header-right {\\n  text-align: right;\\n}\\nmat-toolbar {\\n  position: fixed;\\n  top: 0;\\n  z-index: 100;\\n  background-color: #ffe3e3;\\n}\\n.login,\\n.signup {\\n  margin-left: 10px;\\n}\\n.login {\\n  border: solid 1px #da77f2;\\n  color: #da77f2;\\n}\\n.signup {\\n  background-color: #eebefa;\\n  color: white;\\n}\\n.user {\\n  width: 45px;\\n  height: 45px;\\n  border-radius: 50%;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  overflow: hidden;\\n}\\n.user_btn {\\n  padding: 0;\\n  border: none;\\n  outline: none;\\n  background: none;\\n  box-shadow: none;\\n}\\n.user_btn:hover {\\n  background: none;\\n}\\n/*-----------------휴대폰 적용 CSS---------------------------------- */\\n.example-toolbar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-flow: row wrap;\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n}\\n.example-is-mobile .example-toolbar {\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n  z-index: 2;\\n  width: 100%;\\n}\\n.example-toolbar > h1 {\\n  display: inline;\\n  line-height: 56px;\\n}\\nh1.example-app-name {\\n  margin-left: 8px;\\n}\\n.example-is-mobile .example-sidenav-container {\\n  -webkit-box-flex: 1;\\n          flex: 1 0 auto;\\n}\\nmat-icon {\\n  color: white;\\n}\\nmat-sidenav {\\n  width: 220px;\\n  padding: 10px;\\n}\\nexample-toolbar button,\\nh1 {\\n  -webkit-box-flex: 1;\\n          flex-grow: 1;\\n}\\n.spacer {\\n  -webkit-box-flex: 5;\\n          flex-grow: 5;\\n}\\n.nav-icon {\\n  flex-basis: 10%;\\n  display: inline-block;\\n  line-height: 40px;\\n}\\n.nav-icon i {\\n  font-size: 1.2rem;\\n}\\n.nav-link {\\n  display: inline-block;\\n  text-decoration: none;\\n  height: 100%;\\n  font-weight: bold;\\n  flex-basis: 90%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRTtJQUNFLGFBQWE7RUFDZjtFQUNBO0lBQ0UsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7RUFDQTtJQUNFLFVBQVU7RUFDWjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsY0FBYztJQUNkLGdCQUFnQjtFQUNsQjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGFBQWE7RUFDZjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGFBQWE7RUFDZjtBQUNGO0FBQ0E7RUFDRTtJQUNFLGNBQWM7RUFDaEI7QUFDRjtBQUVBO0VBQ0UsVUFBVTtFQUNWLG9CQUFvQjtBQUN0QjtBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBRUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7QUFDQTs7RUFFRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsNEJBQTRCO0VBQzVCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0EsaUVBQWlFO0FBQ2pFO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsOEJBQW1CO0VBQW5CLDZCQUFtQjtVQUFuQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLE1BQU07RUFDTixTQUFTO0VBQ1QsT0FBTztFQUNQLFFBQVE7RUFDUixXQUFXO0FBQ2I7QUFFQTtFQUNFLDhFQUE4RTtFQUM5RSxVQUFVO0VBQ1YsV0FBVztBQUNiO0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CO0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLG1CQUFjO1VBQWQsY0FBYztBQUNoQjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtBQUNmO0FBRUE7O0VBRUUsbUJBQVk7VUFBWixZQUFZO0FBQ2Q7QUFDQTtFQUNFLG1CQUFZO1VBQVosWUFBWTtBQUNkO0FBRUE7RUFDRSxlQUFlO0VBQ2YscUJBQXFCO0VBQ3JCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dvIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiA1MHB4O1xufVxuLmhlYWRlci1sZWZ0IGEge1xuICBsaW5lLWhlaWdodDogNjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICBtYXQtdG9vbGJhci1yb3cge1xuICAgIHBhZGRpbmc6IDAgMSU7XG4gIH1cbiAgLmhlYWRlci1sZWZ0IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXItcmlnaHQge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgLmhlYWRlci1jZW50ZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAuZXhhbXBsZS10b29sYmFyIGEge1xuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICB9XG4gIC5sb2dvIHtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICBtYXgtaGVpZ2h0OiA1MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgbWF0LXRvb2xiYXItcm93IHtcbiAgICBwYWRkaW5nOiAwIDMlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSBhbmQgKG1heC13aWR0aDogMTgwMHB4KSB7XG4gIG1hdC10b29sYmFyLXJvdyB7XG4gICAgcGFkZGluZzogMCA1JTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE4MDBweCkge1xuICBtYXQtdG9vbGJhci1yb3cge1xuICAgIHBhZGRpbmc6IDAgMTAlO1xuICB9XG59XG5cbi5zYnRuIHtcbiAgd2lkdGg6IDE1JTtcbiAgcGFkZGluZzogMC4zNzVyZW0gMSU7XG59XG5cbmlucHV0IHtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4uaGVhZGVyLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbm1hdC10b29sYmFyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDEwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTNlMztcbn1cbi5sb2dpbixcbi5zaWdudXAge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbi5sb2dpbiB7XG4gIGJvcmRlcjogc29saWQgMXB4ICNkYTc3ZjI7XG4gIGNvbG9yOiAjZGE3N2YyO1xufVxuLnNpZ251cCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWJlZmE7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi51c2VyIHtcbiAgd2lkdGg6IDQ1cHg7XG4gIGhlaWdodDogNDVweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnVzZXJfYnRuIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3gtc2hhZG93OiBub25lO1xufVxuLnVzZXJfYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi8qLS0tLS0tLS0tLS0tLS0tLS3tnLTrjIDtj7Ag7KCB7JqpIENTUy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5leGFtcGxlLXRvb2xiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWlzLW1vYmlsZSAuZXhhbXBsZS10b29sYmFyIHtcbiAgLyogTWFrZSBzdXJlIHRoZSB0b29sYmFyIHdpbGwgc3RheSBvbiB0b3Agb2YgdGhlIGNvbnRlbnQgYXMgaXQgc2Nyb2xscyBwYXN0LiAqL1xuICB6LWluZGV4OiAyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtdG9vbGJhciA+IGgxIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBsaW5lLWhlaWdodDogNTZweDtcbn1cblxuaDEuZXhhbXBsZS1hcHAtbmFtZSB7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG59XG5cbi5leGFtcGxlLWlzLW1vYmlsZSAuZXhhbXBsZS1zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGZsZXg6IDEgMCBhdXRvO1xufVxubWF0LWljb24ge1xuICBjb2xvcjogd2hpdGU7XG59XG5tYXQtc2lkZW5hdiB7XG4gIHdpZHRoOiAyMjBweDtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuZXhhbXBsZS10b29sYmFyIGJ1dHRvbixcbmgxIHtcbiAgZmxleC1ncm93OiAxO1xufVxuLnNwYWNlciB7XG4gIGZsZXgtZ3JvdzogNTtcbn1cblxuLm5hdi1pY29uIHtcbiAgZmxleC1iYXNpczogMTAlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xufVxuLm5hdi1pY29uIGkge1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cbi5uYXYtbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmbGV4LWJhc2lzOiA5MCU7XG59XG4iXX0= */\"","import { Component, ChangeDetectorRef, OnDestroy, ViewChild, OnInit } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { Nav } from '../body/nav/nav.model';\nimport { NgForm } from '@angular/forms';\nimport { PostService } from '../shared/post.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnDestroy, OnInit {\n  avatar: string;\n\n  @ViewChild('snav', {static: false}) snav: MatSidenav;\n\n  filerNav: Array<string>;\n  mobileQuery: MediaQueryList;\n  adminEmail : string[] = [];\n\n  // 인증 여부 판단\n  userIsAuthenticated = false;\n  userData: any;\n\n  catergory: any;\n\n  private authoListenerSubs: Subscription;\n\n  private _mobileQueryListener: () => void;\n\n  private userAuthoritySub: Subscription;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private authService: AuthService,\n    private postsService: PostService, private router: Router) {\n    this.mobileQuery = media.matchMedia('(max-width: 576px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit() {\n    const nav = new Nav();\n    this.catergory = nav.catergory;\n\n    // 인증여부가져옴\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userData = this.authService.getUserData();\n\n    // 상태변화감시\n    this.authoListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userData = this.authService.getUserData();\n      });\n\n\n    this.userAuthoritySub = this.authService.userAuthority.subscribe(adminemail => {\n        this.adminEmail = adminemail.email;\n\n        console.log(this.adminEmail[0]);\n        // console.log(this.adminEmail[0].email);\n\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  onNgSubmit(searchForm: NgForm) {\n    if (searchForm.invalid) {\n      return;\n    }\n    this.router.navigate(['/search'], { queryParams: { searchInput: searchForm.value.searchInput } });\n  }\n\n  sidenavClose() {\n    this.snav.close();\n  }\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    this.authoListenerSubs.unsubscribe();\n  }\n\n\n\n  // shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import { HttpClient } from '@angular/common/http';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ndeclare var $;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxSummernote]',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxSummernoteDirective),\n        multi: true\n    }]\n})\nexport class NgxSummernoteDirective implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    @Input() set ngxSummernote(options: any) {\n        if (options.buttons) {\n            Object.assign(options.buttons, this._options.buttons);\n        }\n        this._options = Object.assign(this._options, options);\n    }\n    // summernoteModel directive as input: store initial editor content\n    @Input() set summernoteModel(content: any) {\n        this.updateEditor(content);\n    }\n\n    // summernoteModel directive as output: update model if editor contentChanged\n    @Output() summernoteModelChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() imageUpload: EventEmitter<any> = new EventEmitter<any>();\n    @Output() imagePath: EventEmitter<any> = new EventEmitter<any>();\n\n    // summernoteInit directive as output: send manual editor initialization\n    @Output() summernoteInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n    @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input() ngxSummernoteDisabled: boolean;\n\n    private _options: any = {\n        immediateAngularModelUpdate: false,\n        angularIgnoreAttrs: null,\n        placeholder: '',\n        tabsize: 2,\n        height: 100,\n        uploadImagePath: '',\n        toolbar: [\n            // [groupName, [list of button]]\n            ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\n            // ['style', ['bold', 'italic', 'underline', 'clear']],\n            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\n            ['fontsize', ['fontname', 'fontsize', 'color']],\n            ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\n            ['insert', ['table', 'picture', 'link', 'video', 'audio', 'hr']],\n        ],\n        fontNames: ['Helvetica', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Roboto', 'Times'],\n        callbacks: {\n            onPaste: (e) => {\n\n            },\n            onImageUpload: (files) => {\n              console.log(\"image upload\");\n              this.uploadImage(files);\n            },\n            /* backspace로 이미지 지우면 콜백이 안됨. 이미지 선택하고 delete버튼을 눌러야 됨. (이게 뭔소용이야...)\n            onMediaDelete : (target) => {\n              console.log(\"image delete\");\n              alert(target[0].src);\n              // deleteFile(target[0].src);\n            }\n            */\n        }\n    };\n    private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\n    private INNER_HTML_ATTR = 'innerHTML';\n    private _hasSpecialTag: boolean;\n    private _$element: any; // jquery wrapped element\n    private _editor: any; // editor element\n    private _model: string;\n    private _oldModel: string = null;\n    private _editorInitialized: boolean;\n\n    constructor(el: ElementRef, private zone: NgZone, private http: HttpClient) {\n        const element: any = el.nativeElement;\n\n        // check if the element is a special tag\n        if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) !== -1) {\n            this._hasSpecialTag = true;\n        }\n\n        // jquery wrap and store element\n        this._$element = (<any>$(element));\n        this.zone = zone;\n    }\n\n    ngOnInit() {\n        this._options.toolbar\n        // check if output summernoteInit is present. Maybe observers is private and\n        // should not be used?? TODO how to better test that an output directive is present.\n        if (!this.summernoteInit.observers.length) {\n            this.createEditor();\n        } else {\n            // TODO not sure it works now...\n            this.generateManualController();\n        }\n    }\n\n    ngOnChanges(changes) {\n        if (this._editorInitialized && changes) {\n            if (changes.ngxSummernoteDisabled && !changes.ngxSummernoteDisabled.firstChange &&\n                changes.ngxSummernoteDisabled.currentValue !== changes.ngxSummernoteDisabled.previousValue) {\n                if (changes.ngxSummernoteDisabled.currentValue) {\n                    this._$element.summernote('disable');\n                } else {\n                    this._$element.summernote('enable');\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyEditor();\n    }\n\n    // Begin ControlValueAccesor methods.\n    onChange = (_) => { };\n    onTouched = () => { };\n\n    // Form model content changed.\n    writeValue(content: any): void {\n        this.updateEditor(content);\n    }\n\n    registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n    registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n    // Update editor with model contents.\n    private updateEditor(content: any) {\n        if (JSON.stringify(this._oldModel) === JSON.stringify(content)) {\n            return;\n        }\n\n        this._oldModel = content;\n        this._$element.html(content);\n\n        if (this._editorInitialized) {\n            this._$element.summernote('code', content);\n        } else {\n            this._$element.html(content);\n        }\n    }\n\n    // update model if editor contentChanged\n    private updateModel(content?: any) {\n        // console.log(\"update model\", content)\n        this.zone.run(() => {\n            let modelContent: any = null;\n\n            if (this._hasSpecialTag) {\n                const attributeNodes = this._$element[0].attributes;\n                const attrs = {};\n\n                for (let i = 0; i < attributeNodes.length; i++) {\n                    const attrName = attributeNodes[i].name;\n                    if (this._options.angularIgnoreAttrs && this._options.angularIgnoreAttrs.indexOf(attrName) !== -1) {\n                        continue;\n                    }\n                    attrs[attrName] = attributeNodes[i].value;\n                }\n\n                if (this._$element[0].innerHTML) {\n                    attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n                }\n\n                modelContent = attrs;\n            } else {\n                const returnedHtml: any = content || '';\n                if (typeof returnedHtml === 'string') {\n                    modelContent = returnedHtml;\n                }\n            }\n            this._oldModel = modelContent;\n            // Update summernoteModel\n            this.summernoteModelChange.emit(modelContent);\n            // Update form model.\n            this.onChange(content);\n        });\n    }\n\n    private initListeners() {\n        const self = this;\n\n        if (!this._$element) { return; }\n\n        this._$element.on('summernote.init', function () {\n            setTimeout(function () {\n                self.updateModel();\n            }, 0);\n        });\n\n        this._$element.on('summernote.change', function (event, contents, $editable) {\n            setTimeout(function () {\n                self.updateModel(contents);\n            }, 0);\n        });\n\n        this._$element.on('summernote.blur', function () {\n            setTimeout(function () {\n                self.onTouched();\n                self.blur.emit();\n            }, 0);\n        });\n\n        if (this._options.immediateAngularModelUpdate) {\n            this._editor.on('keyup', function () {\n                setTimeout(function () {\n                    self.updateModel();\n                }, 0);\n            });\n        }\n    }\n\n    private createEditor() {\n        if (this._editorInitialized) {\n            return;\n        }\n\n        this.setContent(true);\n\n\n        // this.initListeners(); // issue #31\n\n        // init editor\n        this.zone.runOutsideAngular(() => {\n            this._editor = this._$element.summernote(this._options).data('summernote').$note;\n            this.initListeners(); // issue #31\n            if (this.ngxSummernoteDisabled) {\n                this._$element.summernote('disable');\n            }\n        });\n\n        this._editorInitialized = true;\n    }\n\n    private setHtml() {\n        this._$element.summernote('code', this._model || '', true);\n    }\n\n    private setContent(firstTime = false) {\n        // console.log(\"set content\", firstTime, this._oldModel, this._model)\n        const self = this;\n        // Set initial content\n        if (this._model || this._model === '') {\n            this._oldModel = this._model;\n            if (this._hasSpecialTag) {\n                const tags: Object = this._model;\n                // add tags on element\n                if (tags) {\n\n                    for (const attr in tags) {\n                        if (tags.hasOwnProperty(attr) && attr !== this.INNER_HTML_ATTR) {\n                            this._$element.attr(attr, tags[attr]);\n                        }\n                    }\n\n                    if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n                        this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n                    }\n                }\n            } else {\n                self.setHtml();\n            }\n        }\n    }\n\n    private destroyEditor() {\n        if (this._editorInitialized) {\n            this._editor.off('keyup');\n            this._$element.summernote('destroy'); // TODO not sure it works now...\n            this._editorInitialized = false;\n        }\n    }\n\n    private getEditor() {\n        if (this._$element) {\n            return this._$element.summernote.bind(this._$element);\n        }\n\n        return null;\n    }\n\n    // send manual editor initialization\n    // TODO not sure it works now...\n    private generateManualController() {\n        const controls = {\n            initialize: this.createEditor.bind(this),\n            destroy: this.destroyEditor.bind(this),\n            getEditor: this.getEditor.bind(this),\n        };\n        this.summernoteInit.emit(controls);\n    }\n\n    private async uploadImage(files) {\n        const data = new FormData();\n        this.imageUpload.emit({ uploading: true });\n        data.append('image', files[0]);\n\n        if (this._options.uploadImagePath) {\n            this.http.post(this._options.uploadImagePath, data)\n                .pipe(\n                    map((response: { path: string }) => response && typeof response.path === 'string' && response.path),\n                    catchError(e => {\n                        throwError('An error occured while uploading' + e);\n                        return of('');\n                    }))\n                .subscribe(dataIn => {\n                    this.imagePath.emit(dataIn);\n                    if (dataIn) {\n                        this._$element.summernote('insertImage', dataIn);\n                        this.imageUpload.emit({ uploading: false });\n                    } else {\n                        this.insertFromDataURL(files);\n                    }\n                }, (e) => {\n                    this.insertFromDataURL(files);\n                });\n        } else {\n            // this.insertFromDataURL(files);\n        }\n    }\n\n    insertFromDataURL(files) {\n        const reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload = () => {\n            this._$element.summernote('insertImage', reader.result);\n            this.imageUpload.emit({ uploading: false, encoding: 'base64' });\n        };\n        reader.onerror = error => console.error(error);\n    }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 120px;\\n}\\n.content {\\n  width: 70%;\\n  margin: 0 auto;\\n}\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top: 50px;\\n  }\\n  .content {\\n    width: 90%;\\n  }\\n  * {\\n    font-size: 0.8rem;\\n  }\\n}\\n.post-header {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  flex-wrap: nowrap;\\n  padding: 0;\\n  width: 100%;\\n}\\n.title-label {\\n  flex-basis: 10%;\\n}\\n.title-input {\\n  flex-basis: 55%;\\n}\\n.catergory-select {\\n  flex-basis: 25%;\\n}\\n.post-footer {\\n  text-align: right;\\n  margin: 50px;\\n}\\n.save {\\n  min-width: 200px;\\n  font-size: 1.2rem;\\n  background-color: #ff9000;\\n  border-color: #ff9000;\\n  color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLGNBQWM7QUFDaEI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsaUJBQWlCO0VBQ25CO0FBQ0Y7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDhCQUFtQjtFQUFuQiw2QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixVQUFVO0VBQ1YsV0FBVztBQUNiO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvcG9zdC9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMTIwcHg7XG59XG4uY29udGVudCB7XG4gIHdpZHRoOiA3MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gIDpob3N0IHtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICB9XG4gIC5jb250ZW50IHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG4gICoge1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICB9XG59XG4ucG9zdC1oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG4udGl0bGUtbGFiZWwge1xuICBmbGV4LWJhc2lzOiAxMCU7XG59XG4udGl0bGUtaW5wdXQge1xuICBmbGV4LWJhc2lzOiA1NSU7XG59XG4uY2F0ZXJnb3J5LXNlbGVjdCB7XG4gIGZsZXgtYmFzaXM6IDI1JTtcbn1cblxuLnBvc3QtZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG1hcmdpbjogNTBweDtcbn1cbi5zYXZlIHtcbiAgbWluLXdpZHRoOiAyMDBweDtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjkwMDA7XG4gIGJvcmRlci1jb2xvcjogI2ZmOTAwMDtcbiAgY29sb3I6IHdoaXRlO1xufVxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../../shared/post.service';\nimport { environment } from '../../../environments/environment';\nimport { ParamMap, ActivatedRoute, Router, Data } from '@angular/router';\nimport { Nav } from 'src/app/body/nav/nav.model';\nimport { Post } from '../../shared/post.model';\nimport { ReCaptchaV3Service } from 'ng-recaptcha';\nimport { Subscription } from 'rxjs';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Component({\n  selector: 'app-mypage-post',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  content: any;\n  catergory: any;\n  currentCatergory: string;\n  config: any;\n  imagePath: Array<string>;\n  realImagePath: string;\n\n  post: Post;\n  postForm: FormGroup;\n  private mode = 'create';\n  private postId: string;\n\n  public recentToken: string = '';\n  private singleExecutionSubscription: Subscription;\n\n  constructor(private postService: PostService, public route: ActivatedRoute, private router: Router,\n    private recaptchaV3Service: ReCaptchaV3Service) {\n    const nav = new Nav();\n    this.catergory = nav.catergory;\n\n    this.currentCatergory = this.route.snapshot.queryParams.catergory;\n  }\n\n  ngOnInit() {\n    // summernote 초기 속성 정의\n    this.config = {\n      placeholder: '',\n      tabsize: 2,\n      height: '500px',\n      uploadImagePath: BACKED_URL + '/post/image',\n      toolbar: [\n          ['misc', ['codeview', 'undo', 'redo']],\n          ['style', ['bold', 'italic', 'underline', 'clear']],\n          ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\n          ['fontsize', ['fontname', 'fontsize', 'color']],\n          ['para', ['style', 'ul', 'ol', 'paragraph', 'height']],\n          ['insert', ['table', 'picture', 'link', 'video', 'hr']]\n      ],\n      fontNames: ['Helvetica', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Roboto', 'Times']\n    };\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) { // 게시글 id가 url에 존재한다면 이것은 게시글 modify모드라는 소리임.\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        // 그 게시글에 값을 불러와서 form을 그에 맞게 초기화시켜줌.\n\n        this.postService.getEachPost(this.postId).subscribe(postData => {\n            this.post = postData.post;\n            this.postForm.setValue({\n              'title': this.post.title,\n              'catergory': this.post.catergory,\n              'content': this.post.content\n            });\n\n\n        });\n      } else { // 그게 아니라면 게시글을 새로 생성한다는 의미.\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n\n    this.postForm = new FormGroup({\n      title : new FormControl(null, {validators: [Validators.required, Validators.minLength(3), Validators.maxLength(50)]}),\n      catergory : new FormControl(this.currentCatergory, {validators: [Validators.required]}),\n      content: new FormControl(null, {validators: [Validators.required]})\n    });\n  }\n\n  /* 게시글 업데이트 시마다 content저장\n  myEventHanlder(state: any) {\n    this.content = state;\n  }\n  */\n  // 이미지 경로 얻기\n  /*\n  getImagePath(imagePath) {\n    this.imagePath.push(imagePath);\n  }\n*/\n\n  // 대표이미지 설정 지원은 안되는듯함.\n  // content에서 img src 값을 뽑아내는 방법밖에는 없을듯...\n  onNgSubmit() {\n    if (this.postForm.invalid) {\n      return;\n    }\n\n    this.singleExecutionSubscription = this.recaptchaV3Service.execute('post')\n      .subscribe((token) => {\n        this.recentToken = token;\n\n        const rex = /<img[^>]+src=\"([^\">]+)/g; // 이미지 src추출 정규식\n\n        this.imagePath = rex.exec(this.postForm.value.content);\n\n        if (this.imagePath === null) {\n          this.realImagePath = null;\n        } else {\n          this.realImagePath = this.imagePath[1];\n        }\n\n        if (this.mode === 'create') {\n          // console.log(this.postForm.value.title, this.postForm.value.catergory, this.postForm.value.content, this.imagePath[0]);\n          this.postService.addPost(\n            this.postForm.value.title,\n            this.postForm.value.catergory,\n            this.postForm.value.content,\n            this.realImagePath,\n            this.recentToken);\n        } else {\n          this.postService.updatePost(\n            this.postId,\n            this.postForm.value.title,\n            this.postForm.value.content,\n            this.realImagePath);\n          }\n      });\n/*\n    if (this.imagePath[0] === null) {\n      console.log('???');\n      // this.imagePath[0] = null;\n    } else {\n      // this.imagePath[0] = this.imagePath[1];\n    }\n  */\n    //  중요한 사실이 뭔지알아? rex.exec 일회용이야...\n  }\n\n  ngOnDestroy() {\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n  }\n\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top:100px;\\n}\\n.post {\\n  /*border: 1px solid black;*/\\n  width: 80%;\\n  margin: 0 auto;\\n}\\n.title {\\n  text-align: center;\\n  font-size: 1.75rem !important;\\n}\\n.avatar {\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  overflow: hidden;\\n}\\n.write {\\n  overflow: hidden;\\n}\\n.delete, .modify {\\n  text-decoration: none;\\n  color: #999 !important;\\n  cursor: pointer;\\n}\\n.content-identity {\\n  float: right;\\n}\\n.content {\\n  margin-bottom: 100px;\\n}\\n.comments {\\n  display: -webkit-box;\\n  display: flex;\\n}\\nform {\\n  width: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n}\\ntextarea {\\n  width: 80%;\\n  height: 80px;\\n}\\n.article-comments {\\n  background: #f5f5f5;\\n  border-top: #d5d5d5 solid 1px;\\n  padding: 0 15px;\\n}\\n.article-comments {\\n  display: block;\\n  margin: 30px 0;\\n}\\n.reply {\\n  overflow: hidden;\\n  padding: 0;\\n  font-family: '돋움','dotum',Helvetica,sans-serif;\\n  list-style: none;\\n}\\n.comment-box {\\n  padding: 15px 0;\\n  border-bottom: 1px solid #e2e2e2;\\n}\\n.info {\\n  padding-bottom: 1px;\\n  display: inline-block;\\n  overflow: hidden;\\n  max-width: 50%;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  font-size: 13px;\\n  color: #2a2a2a;\\n  font-weight: 700;\\n}\\n.text-wrap {\\n  overflow: hidden;\\n  font-size: 13px;\\n  line-height: 18px;\\n  word-break: break-all;\\n  word-wrap: break-word;\\n}\\n.info-base {\\n  position: relative;\\n  padding: 2px 0 0 0;\\n  font-size: 12px;\\n  font-family: tahoma,helvetica,sans-serif;\\n  color: #999;\\n}\\n/*추천수디자인*/\\n.voteblame {\\n  text-align: center;\\n}\\n.ab-btn-vote {\\n  display: inline-block;\\n  width: 5em;\\n  height: 5em;\\n  border-radius: 5em;\\n  border: 1px solid #999;\\n  position: relative;\\n  cursor: pointer;\\n}\\n.vote-top {\\n  display: block;\\n  margin-top: 0.75em;\\n  line-height: 1.5em;\\n  font-size: 1.25em;\\n}\\n.vote-bottom {\\n  font-size: 0.75em;\\n  position: absolute;\\n  width: 100%;\\n  left: 0;\\n  word-break: break-all;\\n}\\n.box-btn-reply {\\n  overflow: hidden;\\n  position: relative;\\n  height: 23px;\\n  padding: 0 7px;\\n  font-size: 12px;\\n  line-height: 15px;\\n  background-color: #fff;\\n  border: 1px solid #e0e0e0;\\n  color: #000;\\n}\\n.reply_txt {\\n  display: inline-block;\\n  margin-top: 6px;\\n  vertical-align: top;\\n}\\n.reply_cnt {\\n  display: inline-block;\\n  padding: 4px 0 0 5px;\\n  font-weight: 700;\\n  vertical-align: top;\\n  font-family: tahoma,helvetica,sans-serif;\\n}\\n.reply-comments {\\n  display: none;\\n}\\n.active {\\n  display: block;\\n}\\n.reply-comments {\\n  padding-left: 20px;\\n}\\n.span-text:before {\\n  content: \\\"\\\";\\n  display: inline-block;\\n  width: 1px;\\n  height: 10px;\\n  margin: 0 7px 0 10px;\\n  background-color: #ebebeb;\\n  vertical-align: baseline;\\n}\\nbutton {\\n  background-color: #FF9000;\\n  color: white;\\n}\\n.add-button {\\n  position: relative;\\n  min-height: 22px;\\n  text-align: center;\\n  margin: 25px 0;\\n}\\n/*innerHTML요소는 cSS가 안먹히는 문제가 발생...*/\\n/*https://medium.com/sjk5766/angular-innerhtml-style-%EB%B0%98%EC%98%81%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%AC%B8%EC%A0%9C-4f0abbaae661*/\\n@media (max-width: 580px) {\\n  :host {\\n    margin-top:0px;\\n  }\\n  .post {\\n    /*border: 1px solid black;*/\\n    width: 90%;\\n    margin: 0 auto;\\n  }\\n  * {\\n    font-size : 0.75rem !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsVUFBVTtFQUNWLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQiw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0Qiw0QkFBNEI7RUFDNUIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEI7QUFFQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtBQUNmO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFDQTtFQUNFLFVBQVU7RUFDVixZQUFZO0FBQ2Q7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQiw2QkFBNkI7RUFDN0IsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsOENBQThDO0VBQzlDLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdDQUFnQztBQUNsQztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHdDQUF3QztFQUN4QyxXQUFXO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixVQUFVO0VBQ1YsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7QUFDQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsT0FBTztFQUNQLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLHlCQUF5QjtFQUN6QixXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsb0JBQW9CO0VBQ3BCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsd0NBQXdDO0FBQzFDO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsV0FBVztFQUNYLHFCQUFxQjtFQUNyQixVQUFVO0VBQ1YsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIsd0JBQXdCO0FBQzFCO0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCO0FBQ0EsbUNBQW1DO0FBQ25DLDZJQUE2STtBQUU3STtFQUNFO0lBQ0UsY0FBYztFQUNoQjtFQUNBO0lBQ0UsMkJBQTJCO0lBQzNCLFVBQVU7SUFDVixjQUFjO0VBQ2hCO0VBQ0E7SUFDRSw4QkFBOEI7RUFDaEM7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDoxMDBweDtcbn1cbi5wb3N0IHtcbiAgLypib3JkZXI6IDFweCBzb2xpZCBibGFjazsqL1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi50aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjc1cmVtICFpbXBvcnRhbnQ7XG59XG4uYXZhdGFyIHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLndyaXRlIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5kZWxldGUsIC5tb2RpZnkge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjOTk5ICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jb250ZW50LWlkZW50aXR5IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbn1cblxuLmNvbW1lbnRzIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbmZvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbn1cbnRleHRhcmVhIHtcbiAgd2lkdGg6IDgwJTtcbiAgaGVpZ2h0OiA4MHB4O1xufVxuLmFydGljbGUtY29tbWVudHMge1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICBib3JkZXItdG9wOiAjZDVkNWQ1IHNvbGlkIDFweDtcbiAgcGFkZGluZzogMCAxNXB4O1xufVxuLmFydGljbGUtY29tbWVudHMge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAzMHB4IDA7XG59XG4ucmVwbHkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBmb250LWZhbWlseTogJ+uPi+ybgCcsJ2RvdHVtJyxIZWx2ZXRpY2Esc2Fucy1zZXJpZjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5jb21tZW50LWJveCB7XG4gIHBhZGRpbmc6IDE1cHggMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG59XG4uaW5mbyB7XG4gIHBhZGRpbmctYm90dG9tOiAxcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LXdpZHRoOiA1MCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiAjMmEyYTJhO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLnRleHQtd3JhcCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xufVxuLmluZm8tYmFzZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMnB4IDAgMCAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtZmFtaWx5OiB0YWhvbWEsaGVsdmV0aWNhLHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjOTk5O1xufVxuLyrstpTsspzsiJjrlJTsnpDsnbgqL1xuLnZvdGVibGFtZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5hYi1idG4tdm90ZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDVlbTtcbiAgaGVpZ2h0OiA1ZW07XG4gIGJvcmRlci1yYWRpdXM6IDVlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4udm90ZS10b3Age1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMC43NWVtO1xuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xufVxuLnZvdGUtYm90dG9tIHtcbiAgZm9udC1zaXplOiAwLjc1ZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cbi5ib3gtYnRuLXJlcGx5IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDIzcHg7XG4gIHBhZGRpbmc6IDAgN3B4O1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBjb2xvcjogIzAwMDtcbn1cbi5yZXBseV90eHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi10b3A6IDZweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbi5yZXBseV9jbnQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDRweCAwIDAgNXB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBmb250LWZhbWlseTogdGFob21hLGhlbHZldGljYSxzYW5zLXNlcmlmO1xufVxuLnJlcGx5LWNvbW1lbnRzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5yZXBseS1jb21tZW50cyB7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuLnNwYW4tdGV4dDpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMTBweDtcbiAgbWFyZ2luOiAwIDdweCAwIDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOTAwMDtcbiAgY29sb3I6IHdoaXRlO1xufVxuLmFkZC1idXR0b24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi1oZWlnaHQ6IDIycHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAyNXB4IDA7XG59XG4vKmlubmVySFRNTOyalOyGjOuKlCBjU1PqsIAg7JWI66i57Z6I64qUIOusuOygnOqwgCDrsJzsg50uLi4qL1xuLypodHRwczovL21lZGl1bS5jb20vc2prNTc2Ni9hbmd1bGFyLWlubmVyaHRtbC1zdHlsZS0lRUIlQjAlOTglRUMlOTglODElRUIlOTAlOTglRUMlQTclODAtJUVDJTk1JThBJUVCJThBJTk0LSVFQiVBQyVCOCVFQyVBMCU5Qy00ZjBhYmJhYWU2NjEqL1xuXG5AbWVkaWEgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgOmhvc3Qge1xuICAgIG1hcmdpbi10b3A6MHB4O1xuICB9XG4gIC5wb3N0IHtcbiAgICAvKmJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyovXG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuICAqIHtcbiAgICBmb250LXNpemUgOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostService } from '../../shared/post.service';\nimport { Post } from '../../shared/post.model';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Reply } from '../reply.model';\nimport { LikeHateService } from 'src/app/shared/like-hate.service';\nimport { LikeHate } from 'src/app/shared/LikeHate.model';\nimport { ReCaptchaV3Service } from 'ng-recaptcha';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  private likeHateSub: Subscription;\n  likeHate: LikeHate;\n  isLike: Boolean = false;\n  isHate: Boolean = false;\n  postNo: string;\n  post: Post;\n  replys: Reply[]; // 댓글\n  rreplys: Reply[]; // 덧글\n  userNickname: string;\n  pages: number;\n  addButton: Boolean;\n\n  public recentToken: string = '';\n  private singleExecutionSubscription: Subscription;\n\n  private replySub: Subscription;\n  private rreplySub: Subscription;\n\n  constructor(private router: Router, private postService: PostService,\n              private authService: AuthService, private likeHateService: LikeHateService, private recaptchaV3Service: ReCaptchaV3Service) {}\n\n  ngOnInit() {\n    this.pages = 1;\n    this.addButton = false;\n\n    this.userNickname = this.authService.getUserData().userNickname;\n    this.postNo = this.router.url.split('/')[3];\n\n    this.postService.getEachPost(this.postNo)\n    .subscribe((postData) => {\n      this.post = postData.post;\n\n      if (this.post.reply_cnt > this.pages * 10) {\n        this.addButton = true;\n      }\n    });\n\n    this.likeHateService.getLikeHateCount(this.postNo, this.userNickname);\n    this.likeHateSub = this.likeHateService.getlikeHateUpdatedUpdateListener()\n      .subscribe((likeHate) => {\n        this.likeHate = likeHate;\n        if (this.userNickname !== undefined) {\n          if (this.likeHate.mylike === 'Y') {\n            this.isLike = true;\n          } else {\n            this.isLike = false;\n          }\n          if (this.likeHate.myhate === 'Y') {\n            this.isHate = true;\n          } else {\n            this.isHate = false;\n          }\n        }\n      });\n\n    // 초기 댓글 호출 시.\n    this.replys = [];\n    this.postService.getReply(this.postNo, this.pages)\n      .pipe(map((replyData) => {\n        return replyData.reply.map(reply => {\n          return {\n            post_no: reply.post_no,\n            reply_no: reply.reply_no,\n            writer: reply.writer,\n            content: reply.content,\n            reply_date: reply.reply_date,\n            count: reply.count - 1,\n            reply_view: false\n          };\n        });\n    }))\n    .subscribe((transformedReply) => { // 정상적으로 넘어오면\n      this.replys = this.replys.concat(transformedReply);\n\n      if (this.post.reply_cnt > this.pages * 10) {\n        this.addButton = true;\n      } else {\n        this.addButton = false;\n      }\n    });\n  }\n\n  // 댓글 저장\n  onNgReplySubmit(replyForm: NgForm) {\n    // 로그인하지 않은 사용자는 댓글 못씀\n    if (!this.authService.getIsAuth()) {\n      alert('login ahead!');\n      return;\n    }\n    // 댓글에 아무것도 안쓰면 저장못함\n    if (replyForm.invalid) {\n      return;\n    }\n\n    const content = replyForm.value.reply;\n    this.singleExecutionSubscription = this.recaptchaV3Service.execute('reply')\n      .subscribe((token) => {\n        this.recentToken = token;\n\n        this.postService.addReply(this.postNo, this.authService.getUserData().userNickname,\n        content, this.recentToken).subscribe((replyNo) => { // 정상적으로 넘어오면\n          this.replys.push({\n            post_no: this.post.post_no,\n            reply_no: replyNo.replyNo,\n            writer: this.userNickname,\n            content: content,\n            reply_date: new Date(),\n            count: 0,\n            reply_view: false\n          });\n        });\n        replyForm.reset();\n      });\n\n\n  }\n\n  // 덧글 저장\n  onNgRReplySubmit(replyForm: NgForm, replyParentNo: number) {\n    if (!this.authService.getIsAuth()) {\n      alert('login ahead!');\n      return; // 로그인하지 않은 사용자는 댓글 못씀\n    }\n    if (replyForm.invalid) {\n      return; // 댓글에 아무것도 안쓰면 저장못함\n    }\n    const content = replyForm.value.rreply;\n\n    this.singleExecutionSubscription = this.recaptchaV3Service.execute('reply')\n      .subscribe((token) => {\n        this.recentToken = token;\n\n        this.postService.addRReply(this.postNo, this.authService.getUserData().userNickname,\n        replyForm.value.rreply, replyParentNo, this.recentToken)\n        .subscribe((replyNo) => { // 정상적으로 넘어오면\n          this.rreplys.push({\n            post_no: this.post.post_no,\n            reply_no: replyNo.replyNo,\n            writer: this.userNickname,\n            content: content,\n            reply_date: new Date(),\n            count: 0,\n            reply_view: false\n          });\n        });\n      replyForm.reset();\n    });\n  }\n\n  // 덧글 보기 선택\n  selectItem(replyNo: number) {\n    this.replys.forEach((replys) => {\n      if (replys.reply_no === replyNo) {\n        replys.reply_view = !replys.reply_view;\n       }\n\n      if (replys.reply_view === true) {\n        if (replys.reply_no === replyNo) {\n\n        }\n        else {\n          replys.reply_view = false;\n        }\n      }\n    });\n    this.rreplySub = this.postService.getRReply(this.postNo, replyNo, 1)\n      .subscribe((replys) => {\n        this.rreplys = replys.reply;\n      });\n  }\n  // 더보기 버튼 클릭시\n  onloadReply() {\n    this.pages++;\n    this.postService.getReply(this.postNo, this.pages)\n      .pipe(map((replyData) => {\n        return replyData.reply.map(reply => {\n          return {\n            post_no: reply.post_no,\n            reply_no: reply.reply_no,\n            writer: reply.writer,\n            content: reply.content,\n            reply_date: reply.reply_date,\n            count: reply.count - 1,\n            reply_view: false\n          };\n        });\n    }))\n    .subscribe((transformedReply) => { // 정상적으로 넘어오면\n      this.replys = this.replys.concat(transformedReply);\n\n      if (this.post.reply_cnt > this.pages * 10) {\n        this.addButton = true;\n      } else {\n        this.addButton = false;\n      }\n    });\n  }\n\n  // 게시글 삭제\n  onDelete(postNo) {\n    this.postService.deletePost(postNo);\n  }\n\n  // 좋아요, 싫어요\n  onVote(likeHate: number) {\n    this.likeHateService.setLikeCount(this.postNo, this.userNickname, likeHate);\n  }\n\n  // 댓, 답글 삭제\n  onReplyDelete(idx: number, replyNo: number, parent?: number) {\n    const result = confirm('Are you sure you want to delete the comments?');\n    if (result) {\n      this.postService.deleteReply(this.postNo, replyNo, parent).subscribe(() => {\n        if (!parent) { // 댓글일때\n          this.replys.splice(idx , 1);\n        } else { // 답글일때\n          this.rreplys.splice(idx, 1);\n        }\n      });\n    } else {\n\n    }\n  }\n\n  ngOnDestroy() {\n    this.likeHateSub.unsubscribe();\n\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LikeHate } from './LikeHate.model';\nimport { Subject } from 'rxjs';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikeHateService {\n  private likeHateUpdated = new Subject<LikeHate>();\n\n\n  constructor(private http: HttpClient) {}\n\n  getlikeHateUpdatedUpdateListener() {\n    return this.likeHateUpdated.asObservable();\n  }\n\n\n  // 공감 비공감 처리하기\n  setLikeCount(postNo: string, nickname: string, like: number) {\n    const postData = {\n      postNo: postNo,\n      nickname: nickname,\n      like: like\n    };\n    this.http.post(BACKED_URL + '/post/like', postData)\n      .subscribe(() => {\n        this.getLikeHateCount(postNo, nickname);\n      });\n  }\n\n  // 공감 비공감 불러오기\n  getLikeHateCount(postNo: string, nickname: string) {\n    const queryParams = `?postNo=${postNo}&nickname=${nickname}`;\n    this.http.get<{likeHate: LikeHate}>(BACKED_URL + '/post/like' + queryParams)\n      .subscribe((likeData) => {\n        this.likeHateUpdated.next(likeData.likeHate);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Post } from './post.model';\nimport { environment } from '../../environments/environment';\nimport { Reply } from '../post/reply.model';\n\nconst BACKED_URL = environment.BACKED_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private posts: Post[] = []; // 개별 게시글\n\n  private postsUpdated = new Subject<Post[]>();\n  public popularPostUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient, private router: Router, private authService: AuthService, private location: Location) {}\n\n  // 상태변화리스너 생성(게시글이 업데이트되면 알려줘야...)\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  // 인기 게시글 조회\n  getPopularPosts(catergory: string) {\n    const queryParams = `?catergory=${catergory}`;\n    this.http.get<{posts: Post[]}>(BACKED_URL + '/post/popular' + queryParams)\n      .subscribe((popularData) => {\n        this.popularPostUpdated.next(popularData.posts);\n      });\n  }\n\n  // 개별 게시글 조회\n  getEachPost(postNo: string) {\n    console.log('dd');\n    return this.http.get<{post: Post}>(BACKED_URL + '/post/postEach/' + postNo);\n  }\n\n  // 게시글 저장하기\n  addPost(title: string, catergory: string, content: string, imagePath: string, token: string) {\n    let writer = this.authService.getUserData().userNickname;\n    const postData = {\n      title: title,\n      writer: writer,\n      catergory: catergory,\n      content: content,\n      imagePath: imagePath,\n      token : token\n    };\n    // 게시글 정보를 서버에 전송\n    this.http.post(BACKED_URL + '/post', postData)\n      .subscribe(() => { // 정상적으로 넘어오면\n        alert('Saved successfully');\n        this.postsUpdated.next(this.posts);\n        this.location.back();\n        // this.router.navigate(['/']);\n      });\n  }\n\n  // 게시글 삭제\n  deletePost(postNo: string) {\n    const result = confirm('Are you sure you want to delete it?');\n    if (result) {\n      this.http.delete(BACKED_URL + '/post/' + postNo)\n      .subscribe(() => {\n        alert('Deleted successfully');\n        this.router.navigate(['/']);\n      });\n    } else {\n      alert('Canceled');\n    }\n  }\n\n  // 게시글 수정\n  updatePost(postNo: string, title: string, content: string, imagePath: string) {\n    const postData = {\n      title: title,\n      content: content,\n      imagePath: imagePath\n    };\n    this.http.put(BACKED_URL + '/post/' + postNo, postData)\n      .subscribe(() => {\n        alert('Modified successfully');\n        this.router.navigate(['/']);\n      });\n  }\n\n  // 댓글 저장하기\n  addReply(postNo: string, nickname: string, reply: string, token: string) {\n    const postData = {\n      postNo: postNo,\n      nickname: nickname,\n      reply: reply,\n      token: token\n    };\n    return this.http.post<{replyNo: number}>(BACKED_URL + '/reply', postData);\n  }\n\n  // 댓글 불러오기\n  getReply(postNo: string, pages: number) {\n    const queryParams = `?postNo=${postNo}&pages=${pages}`;\n    return this.http.get<{reply: Reply[]}>(BACKED_URL + '/reply' + queryParams);\n  }\n\n  // 덧글 저장하기\n  addRReply(postNo: string, nickname: string, reply: string, parent: number, token: string) {\n    const postData = {\n      postNo: postNo,\n      nickname: nickname,\n      reply: reply,\n      parent: parent, // 부모 댓글번호 추가!!\n      token: token\n    };\n    return this.http.post<{replyNo: number}>(BACKED_URL + '/reply/reply', postData);\n  }\n\n  // 덧글 조회하기\n  getRReply(postNo: string, parent: number, pages: number) {\n    const queryParams = `?postNo=${postNo}&parent=${parent}&pages=${pages}`;\n\n    return this.http.get<{reply: Reply[]}>(BACKED_URL + '/reply/reply' + queryParams);\n  }\n\n  // 사용자 검색\n  getSearchPost(searchInput: string, pages: number) {\n    const queryParams = `?search=${searchInput}&pages=${pages}`;\n    // 백엔드 통신\n    return this.http.get<{posts: Post[]}>(BACKED_URL + '/post/search' + queryParams);\n  }\n\n  // 내 게시글 조회\n  getMyPosts(nickname: string, pages: number) {\n    const queryParams = `?nickname=${nickname}&pages=${pages}`;\n    // 백엔드 통신\n    return this.http.get<{posts: Post[]}>(BACKED_URL + '/post/mypost' + queryParams);\n  }\n\n  // 댓.답글 삭제\n  deleteReply(postNo: string, replyNo: number, parent?: number) {\n    const queryParams = `?postNo=${postNo}&replyNo=${replyNo}&parent=${parent}`;\n    return this.http.delete(BACKED_URL + '/reply/reply' + queryParams);\n  }\n}\n","export const environment = {\n  production: false,\n  BACKED_URL: 'http://localhost:3000/api'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}